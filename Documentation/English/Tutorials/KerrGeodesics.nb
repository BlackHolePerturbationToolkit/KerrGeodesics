Notebook[{
Cell[" ", "TutorialColorBar",
 CellMargins->{{Inherited, Inherited}, {-5, 0}}],

Cell[TextData[{
 ButtonBox["KerrGeodesics",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:KerrGeodesics/guide/KerrGeodesics"],
 StyleBox[" > ", "LinkTrailSeparator"],
 ButtonBox["KerrGeodesics",
  BaseStyle->{"Link", "LinkTrail"},
  ButtonData->"paclet:KerrGeodesics/tutorial/KerrGeodesics"]
}], "LinkTrail"],

Cell[BoxData[GridBox[{
   {Cell["KERRGEODESICS TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"Related Tutorials \[RightGuillemet]\"\>",
        StripOnInput->False], {},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"URL \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"Go to KerrGeodesics website\"\>":>
       FrontEndExecute[{
         NotebookLocate[{
           URL[None], None}]}], 
       Delimiter, "\<\"Go to wolfram Mathematica website\"\>":>
       FrontEndExecute[{
         NotebookLocate[{
           URL[
           "http://reference.wolfram.com/mathematica/guide/Mathematica.html"],
            None}]}]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid"],

Cell[CellGroupData[{

Cell["Kerr Geodesics", "Title",
 $CellContext`ExpressionUUID -> "0f1b5dd4-af38-4ec9-9c68-c3552143acb9"],

Cell["\<\
The KerrGeodesics package provides functions for computing quantities related \
to bound timelike geodesic orbits in Kerr spacetime. Before using the \
functions, first load the package\
\>", "Text",
 $CellContext`ExpressionUUID -> "c435dd41-e3a1-4ee2-b572-31559b6e8453"],

Cell[BoxData[
 RowBox[{"<<", "KerrGeodesics`"}]], "Input",
 CellLabel->"In[1]:=",
 $CellContext`ExpressionUUID -> "f68c0a58-b336-451c-b19b-4fa1b91985ad"],

Cell[CellGroupData[{

Cell["Orbital parametrization", "Subsection",
 $CellContext`ExpressionUUID -> "167af769-32ec-42ed-ad15-657285fb5f5c"],

Cell[TextData[{
 "All the orbits are paremterized by:\n  a - the black \
hole\[CloseCurlyQuote]s spin\n  p - the semi-latus rectum\n  e - the \
eccentricity\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "inc"], "=", 
    RowBox[{"Cos", "[", 
     SubscriptBox["\[Theta]", "inc"], "]"}]}], TraditionalForm]],
  $CellContext`ExpressionUUID -> "fc5af712-306d-474a-ab6e-13237485e35b"],
 "\n  \n  The parameters ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"a", ",", "p", ",", "e", ",", 
     SubscriptBox["\[Theta]", "inc"]}], "}"}], TraditionalForm]],
  $CellContext`ExpressionUUID -> "1bb0dff1-43da-46e2-a7a1-c597e32cd4a0"],
 " are described in, e.g., Sec. II of arXiv:gr-qc/0509101"
}], "Text",
 $CellContext`ExpressionUUID -> "9c32f40d-d9d1-4d14-9d53-7f22a9d4ae6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constants of motion and orbital frequencies", "Subsection",
 CellChangeTimes->{{3.7090219843089333`*^9, 3.709021998381135*^9}},
 $CellContext`ExpressionUUID -> "18a102d1-7238-4900-8062-23ae533772b7"],

Cell["\<\
Compute the constants of motion: energy, angular momentum and Carter constant\
\
\>", "Text",
 $CellContext`ExpressionUUID -> "46821c44-20f2-4e39-a2b2-054cb9d1ff52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoConstantsOfMotion", "[", 
  RowBox[{"0.9`20", ",", "10", ",", "0.5`20", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", "/", "3"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[2]:=",
 $CellContext`ExpressionUUID -> "7d894a01-5f2c-4b5a-bf0a-7a25a04493f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.96470744516135472423432642194011120077`18.851059476846583", ",", 
   "1.81884192219757339848695633754530571683`17.198022530341397", ",", 
   "9.96668158756961887989226101358848626993`16.89827938196065"}], 
  "}"}]], "Output",
 CellLabel->"Out[2]=",
 $CellContext`ExpressionUUID -> "c244d91f-9700-48b5-90e2-c9c418bef0ab"]
}, Open  ]],

Cell["They can also be computed separately", "Text",
 $CellContext`ExpressionUUID -> "14cd1e07-3c45-4de3-a0ca-382b761fb960"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "=", "0.9`20"}], ",", 
     RowBox[{"p", "=", "10"}], ",", 
     RowBox[{"e", "=", "0.5`20"}], ",", 
     RowBox[{"x", "=", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", "/", "3"}], "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"KerrGeoEnergy", "[", 
      RowBox[{"a", ",", "p", ",", "e", ",", "x"}], "]"}], ",", 
     RowBox[{"KerrGeoAngularMomentum", "[", 
      RowBox[{"a", ",", "p", ",", "e", ",", "x"}], "]"}], ",", 
     RowBox[{"KerrGeoCarterConstant", "[", 
      RowBox[{"a", ",", "p", ",", "e", ",", "x"}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[3]:=",
 $CellContext`ExpressionUUID -> "18732d39-793a-4ecd-abeb-24fbbf0bc546"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.96470744516135472423432642194011120077`18.851059476846583", ",", 
   "1.81884192219757339848695633754530571683`17.198022530341397", ",", 
   "9.96668158756961887989226101358848626993`16.89827938196065"}], 
  "}"}]], "Output",
 CellLabel->"Out[3]=",
 $CellContext`ExpressionUUID -> "8282d74a-4bd5-46f5-967a-3251cf3a8875"]
}, Open  ]],

Cell["Some cases can be evaluated analytically, e.g.,", "Text",
 CellChangeTimes->{{3.709536698884091*^9, 3.7095367045863333`*^9}, {
  3.7095367424760437`*^9, 3.709536744084807*^9}, {3.709537182068915*^9, 
  3.709537183911771*^9}},
 $CellContext`ExpressionUUID -> "202bdbac-6f3d-4ad6-b84f-eca1257bb778"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"KerrGeoConstantsOfMotion", "[", 
   RowBox[{"0", ",", "p", ",", "e", ",", "1"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"Schwarzschild", " ", "orbit"}], "*)"}]}]], "Input",
 CellLabel->"In[4]:=",
 $CellContext`ExpressionUUID -> "8661feef-248e-4377-9c05-b18ead5f6348"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox["e", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
     RowBox[{"p", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "-", 
        SuperscriptBox["e", "2"], "+", "p"}], ")"}]}]]], ",", 
   FractionBox["p", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      SuperscriptBox["e", "2"], "+", "p"}]]], ",", "0"}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 $CellContext`ExpressionUUID -> "82393b89-e329-4a3d-af16-7d9d7a55707c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"KerrGeoConstantsOfMotion", "[", 
   RowBox[{"a", ",", "p", ",", "0", ",", "0"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"Polar", ",", " ", 
    RowBox[{"spherical", " ", "orbit"}]}], "*)"}]}]], "Input",
 CellLabel->"In[5]:=",
 $CellContext`ExpressionUUID -> "3546b65e-201a-4bfa-baf2-76f2e2d7aad3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{"p", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "-", 
         RowBox[{"2", " ", "p"}], "+", 
         SuperscriptBox["p", "2"]}], ")"}], "2"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        SuperscriptBox["p", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", "p"}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["p", "2"]}], "+", 
        SuperscriptBox["p", "3"]}], ")"}]}]]], ",", "0", ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["p", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["a", "4"], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "p"}], ")"}], " ", "p"}], "+", 
       SuperscriptBox["p", "4"]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["a", "2"], "+", 
       SuperscriptBox["p", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", "p"}], ")"}], " ", 
        SuperscriptBox["p", "2"]}], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "p"}], ")"}]}]}], ")"}]}]]}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 $CellContext`ExpressionUUID -> "28a21bd4-66cf-4e0a-8eea-0f9e63696396"]
}, Open  ]],

Cell["\<\
The frequencies can be computed w.r.t. Boyer-Lindquist time (default) or Mino \
time\
\>", "Text",
 $CellContext`ExpressionUUID -> "a364a83e-aac9-4c7e-a82f-8121b7bf3b71"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"KerrGeoFrequencies", "[", 
  RowBox[{"0.9`20", ",", "10", ",", "0.5`20", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", "/", "3"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"KerrGeoFrequencies", "[", 
  RowBox[{"0.9`20", ",", "10", ",", "0.5`20", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", "/", "3"}], "]"}], ",", 
   RowBox[{"Time", "\[Rule]", "\"\<Mino\>\""}]}], "]"}]}], "Input",
 CellLabel->"In[6]:=",
 $CellContext`ExpressionUUID -> "5c437c53-5337-4f39-af9a-a417e213f035"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.01582697393965516869802676284172981584`12.84871961467612", ",", 
   "0.02136716932544157769144193335532254136`12.85012844001635", ",", 
   "0.02254148625589115431824793921656555827`11.62915973254917"}], 
  "}"}]], "Output",
 CellLabel->"Out[6]=",
 $CellContext`ExpressionUUID -> "fc1b0d9a-db1a-4c26-a93b-2236349536ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.69805573046696268260963761170265953717`15.29179495733143", ",", 
   "3.64250385842371605791374862166400967176`16.28467335970055", ",", 
   "3.84269200150553154589218983544118464121`11.656077898489738"}], 
  "}"}]], "Output",
 CellLabel->"Out[7]=",
 $CellContext`ExpressionUUID -> "fc1b0d9a-db1a-4c26-a93b-2236349536ac"]
}, Open  ]],

Cell["The frequencies can also be evaluated in the extremal limit", "Text",
 $CellContext`ExpressionUUID -> "1c348d79-2368-4a7a-9c4d-f17dd4b5405d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoFrequencies", "[", 
  RowBox[{"1", ",", "10", ",", "0.5", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", "/", "3"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[8]:=",
 $CellContext`ExpressionUUID -> "8f9e51fe-ae12-4148-828b-b0e84c765d72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.015960516860107434`", ",", "0.02118381109700118`", ",", 
   "0.022460112973478077`"}], "}"}]], "Output",
 CellLabel->"Out[8]=",
 $CellContext`ExpressionUUID -> "5aed918d-b87c-40c3-ba37-636508811729"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties of bound geodesics", "Subsection",
 $CellContext`ExpressionUUID -> "9fd5c162-f53e-412f-ac41-ab9d416a81db"],

Cell["\<\
The inner-most circular orbit (ISCO) is only defined in the equatorial plane. \
You can get analytic results\
\>", "Text",
 $CellContext`ExpressionUUID -> "17d121b2-d7fd-4e0f-97be-70e38389b8ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoISCO", "[", 
  RowBox[{"a", ",", "1"}], "]"}]], "Input",
 CellLabel->"In[9]:=",
 $CellContext`ExpressionUUID -> "026ff845-08b9-4c05-b90f-fc8942591a4f"],

Cell[BoxData[
 RowBox[{"3", "+", 
  SqrtBox[
   RowBox[{
    RowBox[{"3", " ", 
     SuperscriptBox["a", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["a", "2"]}], ")"}], 
         RowBox[{"1", "/", "3"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a"}], ")"}], 
           RowBox[{"1", "/", "3"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "a"}], ")"}], 
           RowBox[{"1", "/", "3"}]]}], ")"}]}]}], ")"}], "2"]}]], "-", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "-", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["a", "2"]}], ")"}], 
         RowBox[{"1", "/", "3"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a"}], ")"}], 
           RowBox[{"1", "/", "3"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "a"}], ")"}], 
           RowBox[{"1", "/", "3"}]]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"4", "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["a", "2"]}], ")"}], 
         RowBox[{"1", "/", "3"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a"}], ")"}], 
           RowBox[{"1", "/", "3"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "a"}], ")"}], 
           RowBox[{"1", "/", "3"}]]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox["a", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox["a", "2"]}], ")"}], 
               RowBox[{"1", "/", "3"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "-", "a"}], ")"}], 
                 RowBox[{"1", "/", "3"}]], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", "a"}], ")"}], 
                 RowBox[{"1", "/", "3"}]]}], ")"}]}]}], ")"}], "2"]}]]}]}], 
      ")"}]}], ")"}]}]}]], "Output",
 CellLabel->"Out[9]=",
 $CellContext`ExpressionUUID -> "04a23d1f-93f7-4134-9056-beebfb5da756"]
}, Open  ]],

Cell["Or numerical results", "Text",
 $CellContext`ExpressionUUID -> "56154f70-33a6-418d-81fd-f66546d21a78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"KerrGeoISCO", "[", 
    RowBox[{"0.9", ",", "1"}], "]"}], ",", 
   RowBox[{"KerrGeoISCO", "[", 
    RowBox[{"0.9", ",", 
     RowBox[{"-", "1"}]}], "]"}]}], "}"}]], "Input",
 CellLabel->"In[10]:=",
 $CellContext`ExpressionUUID -> "c1d9cf18-b749-4417-a44a-21bd34dbdf0b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.320883041761887`", ",", "8.717352279606489`"}], "}"}]], "Output",
 
 CellLabel->"Out[10]=",
 $CellContext`ExpressionUUID -> "b4b7c0e5-edc7-4e6e-8dd8-5a40eeb80b22"]
}, Open  ]],

Cell["\<\
Out of the equatorial plane we can define the Inner-most stable spherical \
orbit (ISSO).\
\>", "Text",
 $CellContext`ExpressionUUID -> "e6e7b839-df17-4af3-a557-839526194d48"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoISSO", "[", 
  RowBox[{"0.9", ",", "0.9"}], "]"}]], "Input",
 CellLabel->"In[11]:=",
 $CellContext`ExpressionUUID -> "82084b07-f49c-4624-9b3c-bd775de5be40"],

Cell[BoxData["2.5363955665521254`"], "Output",
 CellLabel->"Out[11]=",
 $CellContext`ExpressionUUID -> "715ce6af-857c-4c87-8ae1-57c570901f45"]
}, Open  ]],

Cell["\<\
We can also located separatrix between bound and plunging orbits\
\>", "Text",
 $CellContext`ExpressionUUID -> "ff3cc531-a831-4017-9b0d-7063ee54b4c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoSeparatrix", "[", 
  RowBox[{"0.9`20", ",", "0.5`20", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", "/", "4"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[12]:=",
 $CellContext`ExpressionUUID -> "3d0d56be-a37c-4199-a6d3-2d0bcdd4351f"],

Cell[BoxData["3.60578818280282176628592378167885884735`15.617511111763559"], \
"Output",
 CellLabel->"Out[12]=",
 $CellContext`ExpressionUUID -> "24d0e795-e22a-4d70-a5a4-51c30dcb65fe"]
}, Open  ]],

Cell["\<\
The separatrix can be evaluated analytic for some special cases, e.g.,\
\>", "Text",
 $CellContext`ExpressionUUID -> "8bb2cd23-6fba-43fa-ac5a-5c990a1a560f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"KerrGeoSeparatrix", "[", 
  RowBox[{"0", ",", "p", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"KerrGeoSeparatrix", "[", 
  RowBox[{"1", ",", "p", ",", "1"}], "]"}]}], "Input",
 CellLabel->"In[13]:=",
 $CellContext`ExpressionUUID -> "3b7d93b1-f49c-4895-a137-a95b3069f14f"],

Cell[BoxData[
 RowBox[{"6", "+", 
  RowBox[{"2", " ", "p"}]}]], "Output",
 CellLabel->"Out[13]=",
 $CellContext`ExpressionUUID -> "e450c8f8-adc4-481c-a8a0-b546f86a8ec6"],

Cell[BoxData[
 RowBox[{"1", "+", "p"}]], "Output",
 CellLabel->"Out[14]=",
 $CellContext`ExpressionUUID -> "e450c8f8-adc4-481c-a8a0-b546f86a8ec6"]
}, Open  ]],

Cell["We can also locate the photon sphere radius", "Text",
 $CellContext`ExpressionUUID -> "8d45a1a5-a33b-4880-b083-4c891823fed5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoPhotonSphereRadius", "[", 
  RowBox[{"0.9`20", ",", "0.9`20"}], "]"}]], "Input",
 CellLabel->"In[15]:=",
 $CellContext`ExpressionUUID -> "63d2727f-4a50-4b17-9dcc-3609641555a2"],

Cell[BoxData["1.60391887328839861929519419059322160321`19."], "Output",
 CellLabel->"Out[15]=",
 $CellContext`ExpressionUUID -> "466176e2-6ca5-427e-9756-d686fd926018"]
}, Open  ]],

Cell["\<\
This can also be evaluated analytically for a few special cases, e.g.,\
\>", "Text",
 $CellContext`ExpressionUUID -> "f1542f88-5e62-4881-a580-59cf8a168b9f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"KerrGeoPhotonSphereRadius", "[", 
  RowBox[{"a", ",", 
   RowBox[{"-", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"KerrGeoPhotonSphereRadius", "[", 
  RowBox[{"1", ",", "x"}], "]"}]}], "Input",
 CellLabel->"In[16]:=",
 $CellContext`ExpressionUUID -> "70f869e3-e98c-4414-89dd-22ac39878e08"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"ArcCos", "[", "a", "]"}]}], "3"], "]"}]}], ")"}]}]], "Output",
 
 CellLabel->"Out[16]=",
 $CellContext`ExpressionUUID -> "c77b2a9a-fc9f-4f78-9655-30d51d6624d2"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"x", "<", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SqrtBox["3"]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{
     SqrtBox["2"], " ", 
     SqrtBox[
      RowBox[{"1", "-", "x"}]]}], "-", "x"}], ",", "1"}], "]"}]], "Output",
 CellLabel->"Out[17]=",
 $CellContext`ExpressionUUID -> "c77b2a9a-fc9f-4f78-9655-30d51d6624d2"]
}, Open  ]],

Cell["\<\
We can also locate the inner-most bound spherical orbit (IBSO)\
\>", "Text",
 $CellContext`ExpressionUUID -> "9f18bd02-d93e-45a6-9e28-0ca2f3f615cb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"KerrGeoIBSO", "[", 
  RowBox[{"0.9`20", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", "/", "4"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"KerrGeoIBSO", "[", 
  RowBox[{"a", ",", "1"}], "]"}]}], "Input",
 CellLabel->"In[18]:=",
 $CellContext`ExpressionUUID -> "d012b7d3-9e70-47ef-8bef-769b1406fbfd"],

Cell[BoxData["2.09573838055442828199428736617606811748`19."], "Output",
 CellLabel->"Out[18]=",
 $CellContext`ExpressionUUID -> "797d23fd-f2bf-45ae-bdbc-deb0d1ec7adb"],

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{"2", " ", 
   SqrtBox[
    RowBox[{"1", "-", "a"}]]}], "-", "a"}]], "Output",
 CellLabel->"Out[19]=",
 $CellContext`ExpressionUUID -> "797d23fd-f2bf-45ae-bdbc-deb0d1ec7adb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute the orbital trajectory", "Subsection",
 $CellContext`ExpressionUUID -> "1e079933-a422-447f-88e2-84f3106251c2"],

Cell["\<\
The KerrGeoOrbit[] function can be used to return a KerrGeoOrbitFunction \
which can be queried for the properties of the orbit. For generic orbits the \
trajectory is returned w.r.t. Mino time\
\>", "Text",
 $CellContext`ExpressionUUID -> "e3ec9f82-48fc-4d8c-8968-7f257f1499d5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"orbit", "=", 
   RowBox[{"KerrGeoOrbit", "[", 
    RowBox[{"0.998", ",", "3", ",", "0.6", ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Pi]", "/", "4"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[CurlyPhi]"}], "}"}], "=", 
   
   RowBox[{"orbit", "[", "\"\<Trajectory\>\"", "]"}]}], ";"}]}], "Input",
 CellLabel->"In[20]:=",
 $CellContext`ExpressionUUID -> "8af649fb-e9b7-498b-9589-053829d0b2e6"],

Cell["Plot the orbit", "Text",
 $CellContext`ExpressionUUID -> "9800f65f-79c5-411e-9678-5176c7ccdae7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"r", "[", "\[Lambda]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[CurlyPhi]", "[", "\[Lambda]", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"r", "[", "\[Lambda]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[CurlyPhi]", "[", "\[Lambda]", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"r", "[", "\[Lambda]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Sphere", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"1", "+", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"0.998", "^", "2"}]}], "]"}]}]}], "]"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellLabel->"In[22]:=",
 $CellContext`ExpressionUUID -> "7591ee50-bd86-4f0d-a188-fba71fe6896d"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
w4MpGIfHgA43G3+2PHKWV2kGKsWPtti8o2BrbTJKN4YoePuIYdEf6jgUlO3e
/usTBYPnB2kFvRTcqPT5Z43iYZjTKzv65isFm9hErRFqp+BXBIxe9gX3wzmN
vHbGNwoW/2TExKqegp9e3pQuWNIJhkeiOHoyKVgEy8s9p5yCZ8j9OvL6ZiMw
i3b7nGTjcXniVeJ5FPxUbMeBo6oVUDdsFHkinYKxWnVEn6RQ8I8OkRHqF9Jg
dMqZszeJgk3ujA5ci6bgl7PrRDa2Z6Az1x9IcMZTsCM3hVvCX1Bwe9/33C7t
jej7Dcv8bQEU7MfW3fwylyh4StSBqVFWJ+q8n2203YOC8UdvmpU9RMG181dE
8572o+axUrsuOwp2wdwy4PR2Cv615dfUpsfj6JTG5zMX91OwBqkyM8cFMVxD
kHrSk4OG5EsOi3xuEMOYpNlvRxzE8OFLS0pto3SUIHDtdFumGPbmHiXkx2Ex
XIwb94n9zUQWGddlGUFiWJdfUnmorBgumRzq9/DuMhq9t75to6EY5hT5VLX2
jyh+jWP4jCEi4rE3PhRvixDFwoepfkc3iOJUv9Fon03c+NF8Vc++AWHsyUmj
i7K3hfFA8dMnrzdz435jRWVVicLYnmQr2TM7hXHKkx1pm17y4NKF8t2mtsLY
CkdV216aEF5Ts9TQO86LzweJZTbWCmEzkXb7tq4Twnfd0Hvt4yKAF4VpPtZN
E8CO/Tmrs1dUABc0GL9S2SqMD0VYuFwU5MH85MwPNrL1yJHnfRsTBEXwU0PP
gtI9ubF9xfdurN3lxuXLZU0es+dHPd/l/JEJLuymy1GpaCoX3iKwPuvgRxE8
LmHb0ukyTuxho1TyGSonHmmrdEXopCjeFPWMc4sjB8b5zHLcboYDt/8+6L3+
nijubhWV9qWZjGF7jWNDHThwiQ9CaduiRXFVAb+FhH1k7CcnNIRPkHGOmoSN
dzpF8Xfea7kGAiRMV9Q0+9wICfdNS46dOSKGF1KzqcPH1oDTvenCjh4C/tvB
ffoVe96QzsiFE6VW4RfzXoXLRQL+Qyd94pirGO7IJ6wpxN57Zz4fd+3/uYa2
ZJ87rxclhivbbr7u6bUIDi/E/O2+r6A+p5YOuy9i+EmNoCJJExZkzjeHymUu
o0xmrmJ1lhguKHA8XVaCCcYuX86HZyyhV7+EkrdUi+F8XSEPe7/TYGPy8GNG
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
Jljx1IUtpKzXe+Je3ybyY/G2Xy3pg+CsyMmepU1UlSGycaF/E+1iR477owYh
yczqvErEJspNc6jUoMWLGIZVsh8dhlvGWz8v7NpE/NHVXTK0/ONjtpI3ekdA
O0dm0SxrA90bmwkToPXzGes15nowBm73882P/beBlsSFVPho/R+9YXLsceok
RPwlDdLprqPtT97HEY0HJ4eDF9ZUpmHqmZwroWoN7cgqTPfIpNX/MSuwXTgD
EkI5dPJaawjDyndX0fj8xHahn/X7PHy5MdCudIiKCuWymCse0PifviKmuGcZ
fsrxtKj1k5HBW8mSRMlNVOQp7KvZuAyzrAaXnTXJ6OKHoxFcjJvInn+F0/P+
CuTYFr29/p6EopkNzxeOb6BH8akyM/lE0BsX4R21ICK1+f3X/qRuIHWe1xpT
TKugYV5kE/N+CaX2eDKf5dtA999Ldg09WoW+r255GHURhYZefFU5s450icP5
VDoK+LZ6/ZdruIj0Tvy73Fy+jrb+e3HSbJ4CLAk6j4LH59BdbriV5bqOkqOK
Ei7GrkE+rybmf3YSXT9cRd+dv4bK94qmrZDWoNA18XVH9zjaOpBapvdoDTGe
oXYam6zDO/TFn89hDBUdNz5303QNeYpIeO9bXwcNqyWTMe9hROwwLCqfpCI7
uq4oN7FNkB3QFJYldCGV4ydZbjNTUczpM68ULDbhJufnNlFqGzIvHWr694+C
KEakjqvPNoGvdW1P5XwzGrYpNVuLpKDCy8SM08ubkJ3TtRKS8he5PTdL7uWh
oBxfu0uTElvw6oZMRZ5/OZK0jeeLa1xFxTaNUataWwCGoibN336hk3+lnhx+
tooSGI59NQvcgsAJkjejQgA6z3z4hALbKooaqxWNf7MFfnIpZL4vH6GMbue1
0Aoyihz+xambuQU62U4l37PzwWO+6manH22eBvvVzIq34JudMSkzpBTWg+Xb
ZY6SUVqbdl1p1RZsJP1jOvztD+g8s9B0XCQhaRffrOjaLdC+/PdiUlcdVJ3x
0fmRRkIn6Na1y+u2IK+m4t8OQjOc7/kQRH+ZhJbMIdri3xaUKBjPO/K2wY6t
wlQbfhIiPm1XMy7bgl8jcUsBUp1wvcTmWtUfIpoPdrqenbcFx54Zsozv7wGW
s3/v6DwgIta0v8ueH7fgUeY5PWX1fuDtyo/tOUBEERIHg8zubQEDj7TWzK5h
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
UScjAxcLrm878k8MEyLNVEIaP4C27DHr5uMyMKv10XxwjBj+eOzFdrOUJMR5
w7Dr9kMZ6D+u95vzgBiOqTwmoFb8Fdn8qVF7PS8DdbU/J+mlieLfYTISiprN
6Kv/J3pI2kao4efHuTNCGJduIh3S4BtBNtLplnPVG+GssbLGlVYhvHs1hBGd
PoZqi3k5m8Y2wv0pDc3Km4XwAdNP4RNak+g6PfRB/w5ZeO2H91DAGwKW33RQ
TtNyDsWwFq/33ZWFjuO0vqzXfFjpRo9k8xsSuq+h+dYsVhZqtM/1F06s5z4G
SUX8HxlFSW9x182QhcOdh7COAi/uKYm+lyayjKxGTaTS3spCyeHR50cu8GCG
Q1uG5X4qKjK4/jy8WBa29tTG86dy44s51p3sl2kopU3XYrZMFuqYOMwktXPh
P8FWtglxdLT0WVawo1IWRr2fHxAU5sK5n/s1Rz8z0P3i3h2HkCx89OlgwUMT
TlzDCez/djNRoQ60M6han+fCvuhdwRx4W8Mo0qetoMP2UwNfvsrCcpmvSTwf
2bEHaQiuiq+ijWELF36WyMKQ9IjWgxNsmNrQXcahsob2nz9LcsmXhTs2xO2k
y7HhW6kl4Qlb2LDO0i2J1CxZuO3arXvRmauo8Vl4lMq6X4aWyX3wSpCFM/qz
jo/5WOgPKB0vVWXHyX7PhAfDZWFnx9Q19atM5HtD4YVyATue999zpOqcLDxb
Rt6mCmgo7NCjgucFHPigmXHqf6aykP3BHR1q3jLikLj5M1iNEw9dDXznrikL
6UISZ4AIBVmdT0iRfcWJP5xCn6SoG2FD6+q1jcNLqJ/4mmifyIXn3HSmrl/Z
CCOffWoF6hMoUPPb1aVTPPhKKLNqalkaFmYtaxBscoB6eMkne3t+LLn9weQs
koYkn13dwhkY5Ap+SNxbwI+5Ip4aGUZIw+/0NvnnFg1gllRIvM4ugEcsK371
i0pD90GbEzJvu4Hl7c5zw2kCGNDvnL8hJgX94zkMlRkTQM9H1ST5EwG/cnve
Q22UhKEimbeOf5gGx0qiJ6WWCfhLwxNz2UhJKKnDKIg+MwccjxA3TmoLYv1v
h0y9mRLQxtRSSN18CeDJcNmnLwXx5Kcdtx82b4BeKgKvWsyXgd7yfy267kL4
xRGy+pHwDdCNmBxyKoQKzIIErZ/HCeEHtALhNb0N8EW1fklKPg0kcSI/t69C
+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
RV+t07a9AgzwP9ZFTT4=
      "]]}}, 
   {GrayLevel[0], SphereBox[{0, 0, 0}, 1.0632139225171164`]}},
  Boxed->False,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->700,
  Method->{},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.3, -2.4, 2.},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellLabel->"Out[22]=",
 $CellContext`ExpressionUUID -> "0ec7be95-bd8e-4d4a-8c31-1f4d0095f220"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"orbit", "[", "\"\<Energy\>\"", "]"}], ",", 
   RowBox[{"orbit", "[", "\"\<AngularMomentum\>\"", "]"}], ",", 
   RowBox[{"orbit", "[", "\"\<CarterConstant\>\"", "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"orbit", "[", "\"\<ConstantsOfMotion\>\"", "]"}]}], "Input",
 CellLabel->"In[23]:=",
 $CellContext`ExpressionUUID -> "04e38879-6d94-4ec3-8f2a-b59c08c94793"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9105141158635779`", ",", "1.7456346703725456`", ",", 
   "3.132380838651713`"}], "}"}]], "Output",
 CellLabel->"Out[23]=",
 $CellContext`ExpressionUUID -> "ae0324be-c69d-4ec7-9e06-c7d5cef1713e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9105141158635779`", ",", "1.7456346703725456`", ",", 
   "3.132380838651713`"}], "}"}]], "Output",
 CellLabel->"Out[24]=",
 $CellContext`ExpressionUUID -> "ae0324be-c69d-4ec7-9e06-c7d5cef1713e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"orbit", "[", "\"\<Frequencies\>\"", "]"}]], "Input",
 CellLabel->"In[25]:=",
 $CellContext`ExpressionUUID -> "14718738-5cb7-4442-9939-7830bf9d6527"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8602610549339375`", ",", "2.494410198515401`", ",", 
   "3.7503257314592906`"}], "}"}]], "Output",
 CellLabel->"Out[25]=",
 $CellContext`ExpressionUUID -> "8dc565ba-8986-40b2-bff3-9df460ff668a"]
}, Open  ]],

Cell["\<\
For orbits in the equatorial plane you can also parametrize the orbits by the \
Darwin parameter\
\>", "Text",
 $CellContext`ExpressionUUID -> "0f95592e-af41-4f07-ba77-fb2e9173eaa0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"orbitD", "=", 
  RowBox[{"KerrGeoOrbit", "[", 
   RowBox[{"0.9", ",", "10", ",", "0.5", ",", "1", ",", 
    RowBox[{"Parametrization", "\[Rule]", "\"\<Darwin\>\""}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[26]:=",
 $CellContext`ExpressionUUID -> "d22598fa-0337-43a0-89f5-f7b521e26dc7"],

Cell[BoxData["\<\"KerrGeoOrbitFunction[0.9,10,0.5,1.,<<>>]\"\>"], "Output",
 CellLabel->"Out[26]=",
 $CellContext`ExpressionUUID -> "5ed71e80-24bd-4c72-a69a-fc39a03e7545"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"orbitD", "[", "0", "]"}], "\[IndentingNewLine]", 
 RowBox[{"orbitD", "[", 
  RowBox[{"2", "\[Pi]"}], "]"}]}], "Input",
 CellLabel->"In[27]:=",
 $CellContext`ExpressionUUID -> "db840afa-2788-4fba-a59f-d77fc64e0176"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "6.666666666666666`", ",", "1.5707963267948966`", ",", "0.`"}], 
  "}"}]], "Output",
 CellLabel->"Out[27]=",
 $CellContext`ExpressionUUID -> "07ce5107-37f4-411c-9d82-924c0b9f1595"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "378.40800610683897`", ",", "6.666666666666666`", ",", 
   "1.5707963267948966`", ",", "8.112767469050885`"}], "}"}]], "Output",
 CellLabel->"Out[28]=",
 $CellContext`ExpressionUUID -> "07ce5107-37f4-411c-9d82-924c0b9f1595"]
}, Open  ]],

Cell["\<\
There are two methods to compute the orbit: \[OpenCurlyDoubleQuote]FastSpec\
\[CloseCurlyDoubleQuote] (default) or \[OpenCurlyDoubleQuote]Analytic\
\[CloseCurlyDoubleQuote]. The former takes longer to compute the \
KerrGeoOrbitFunction[] but then the trajectory is quicker to evaluate. The \
latter is fast to compute the KerrGeoOrbitFunction[] but then it is slower to \
evaluate.\
\>", "Text",
 $CellContext`ExpressionUUID -> "1e65838a-0d04-4dd5-9584-c6418d22b95b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Timing", "[", 
  RowBox[{"orbitFS", "=", 
   RowBox[{"KerrGeoOrbit", "[", 
    RowBox[{"0.99", ",", "5", ",", "0.5", ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Pi]", "/", "3"}], "]"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<FastSpec\>\""}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"orbitA", "=", 
   RowBox[{"KerrGeoOrbit", "[", 
    RowBox[{"0.99", ",", "5", ",", "0.5", ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Pi]", "/", "3"}], "]"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Analytic\>\""}]}], "]"}]}], 
  "]"}]}], "Input",
 CellLabel->"In[29]:=",
 $CellContext`ExpressionUUID -> "68a23c62-c437-435e-8bdb-a7693d6bfc02"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.64063`", ",", "\<\"KerrGeoOrbitFunction[0.99,5,0.5,0.5,<<>>]\"\>"}], 
  "}"}]], "Output",
 CellLabel->"Out[29]=",
 $CellContext`ExpressionUUID -> "bf2c09df-90e0-4d07-9c0c-c2cf27ce7cad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.03765`", ",", "\<\"KerrGeoOrbitFunction[0.99,5,0.5,0.5,<<>>]\"\>"}], 
  "}"}]], "Output",
 CellLabel->"Out[30]=",
 $CellContext`ExpressionUUID -> "bf2c09df-90e0-4d07-9c0c-c2cf27ce7cad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"orbitFS", "[", "100", "]"}], "//", 
  "Timing"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orbitA", "[", "100", "]"}], "//", 
  "Timing"}], "\[IndentingNewLine]", 
 RowBox[{"%", "/", "%%"}]}], "Input",
 CellLabel->"In[31]:=",
 $CellContext`ExpressionUUID -> "a246dd98-ebfa-40aa-b0d5-b7355e26a6ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00249`", ",", 
   RowBox[{"{", 
    RowBox[{
    "4812.412299835556`", ",", "3.859471333765709`", ",", 
     "1.245268471655703`", ",", "347.9211372001861`"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[31]=",
 $CellContext`ExpressionUUID -> "c7f51ec4-bb79-48e0-b737-4778848d3fe3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.019117`", ",", 
   RowBox[{"{", 
    RowBox[{
    "4812.412299835555`", ",", "3.8594713337657303`", ",", 
     "1.2452684716556115`", ",", "347.921137200186`"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[32]=",
 $CellContext`ExpressionUUID -> "c7f51ec4-bb79-48e0-b737-4778848d3fe3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.677510040160642`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9999999999999998`", ",", "1.0000000000000056`", ",", 
     "0.9999999999999265`", ",", "0.9999999999999999`"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[33]=",
 $CellContext`ExpressionUUID -> "c7f51ec4-bb79-48e0-b737-4778848d3fe3"]
}, Open  ]]
}, Open  ]],

Cell["", "RelatedTutorialsSection",
 WholeCellGroupOpener->True,
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "RELATED TUTORIALS", BaseStyle -> None, 
        Appearance -> {Automatic, None}, Evaluator -> None, Method -> 
        "Preemptive", ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "RelatedTutorialsSection"], 
     TextData[
      ButtonBox[
       Cell[
        TextData[{
          Cell[
           BoxData[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[24]]]], "Related Tutorials"}], "RelatedTutorialsSection"],
        BaseStyle -> None, Appearance -> {Automatic, None}, Evaluator -> None,
        Method -> "Preemptive", ButtonFunction :> (FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], All, ButtonCell], 
          FrontEndToken["OpenCloseGroup"], 
          FrontEnd`SelectionMove[
           FrontEnd`SelectedNotebook[], After, CellContents]}]& )]]], None}, {
   None, None}},
 CellFrameLabelMargins->0]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"KerrGeodesics",
Visible->True,
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, 
  "Metadata" -> {
   "context" -> "KerrGeodesics`", "keywords" -> {"Kerr", "Geodesic"}, "index" -> 
    True, "label" -> "KerrGeodesics Tutorial", "language" -> "en", "paclet" -> 
    "KerrGeodesics", "status" -> "None", "summary" -> 
    "Tutorial for the KerrGeodesics package.", "synonyms" -> {}, "title" -> 
    "KerrGeodesics", "windowTitle" -> "KerrGeodesics", "type" -> "Tutorial", 
    "uri" -> "KerrGeodesics/tutorial/KerrGeodesics"}, "SearchTextTranslated" -> 
  "", "LinkTrails" -> ""},
TrackCellChangeTimes->False,
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Reference.nb", 
  CharacterEncoding -> "UTF-8"]
]

