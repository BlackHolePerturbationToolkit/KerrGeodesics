(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    514488,      10924]
NotebookOptionsPosition[    468173,       9988]
NotebookOutlinePosition[    505861,      10751]
CellTagsIndexPosition[    505818,      10748]
WindowTitle->PlungesTest.nb
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Quit", "[", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.883109422162093*^9, 3.883109423670463*^9}, {
  3.883120143125412*^9, 3.8831201447665663`*^9}, {3.8831298510720873`*^9, 
  3.883129859267749*^9}, {3.883130192423621*^9, 3.883130216308236*^9}},
 CellID->1938547394,ExpressionUUID->"a88f2dd6-fc57-4f9f-8a61-f233bd07a9f4"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Import", "[", 
   "\"\</Users/conordyson/Documents/GitHub/BHPT/KerrGeodesics/\
KerrGeodesicsTest/Kernel/KerrGeoPlunge.m\>\"", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.883120073203125*^9, 3.8831200803588057`*^9}, 
   3.883129841769033*^9, {3.8831301353157663`*^9, 3.883130138314004*^9}, {
   3.883130197992441*^9, 3.8831302220858517`*^9}},
 CellID->317559527,ExpressionUUID->"a94a2733-c1d2-4aa9-b1ef-a462dd930ae7"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "@", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"PacletDirectoryLoad", "[", "\"\<.\>\"", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"<<", "KerrGeodesics`*"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.883105895697159*^9, 3.883105899913246*^9}, {
  3.8831096951878033`*^9, 3.88310969701782*^9}},
 CellID->2093888465,ExpressionUUID->"abafd09e-30e8-4b39-8a28-1d05fcbff785"],

Cell[CellGroupData[{

Cell["Run This Section Before  Testing", "Section",
 CellChangeTimes->{{3.883129882177339*^9, 3.883129894915172*^9}},
 CellID->2033851281,ExpressionUUID->"8b30adfc-1b34-4f30-ab03-3dbdbf9fff13"],

Cell[BoxData[{
 RowBox[{"Off", "[", 
  RowBox[{"Power", "::", "infy"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Off", "[", 
  RowBox[{"Infinity", "::", "indet"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Off", "[", 
  RowBox[{"FindRoot", "::", "brmp"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RPoly", "[", "\[Lambda]_", "]"}], ":=", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Epsilon]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"r", "[", "\[Lambda]", "]"}], "2"], "+", 
          SuperscriptBox["a", "2"]}], ")"}]}], "-", 
       RowBox[{"a", "*", "L"}]}], ")"}], "2"], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"r", "[", "\[Lambda]", "]"}], "2"], "-", 
       RowBox[{"2", "*", 
        RowBox[{"r", "[", "\[Lambda]", "]"}]}], "+", 
       SuperscriptBox["a", "2"]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"r", "[", "\[Lambda]", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "*", "\[Epsilon]"}], "-", "L"}], ")"}], "2"], "+", 
       "Q"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Poly\[Theta]", "[", "\[Lambda]_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"z", "[", "\[Lambda]", "]"}], "2"], "-", 
      SuperscriptBox["Z1", "2"]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["a", "2"], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["\[Epsilon]", "2"]}], ")"}], 
       SuperscriptBox[
        RowBox[{"z", "[", "\[Lambda]", "]"}], "2"]}], "-", 
      SuperscriptBox["Z2", "2"]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Poly\[Phi]", "[", "\[Lambda]_", "]"}], ":=", " ", 
   RowBox[{
    RowBox[{
     FractionBox["a", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", "[", "\[Lambda]", "]"}], "-", "RP"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", "[", "\[Lambda]", "]"}], "-", "RM"}], ")"}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Epsilon]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"r", "[", "\[Lambda]", "]"}], "2"], "+", 
          SuperscriptBox["a", "2"]}], ")"}]}], "-", 
       RowBox[{"a", "*", "L"}]}], ")"}]}], " ", "+", " ", 
    FractionBox["L", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"z", "[", "\[Lambda]", "]"}], "2"]}]], "-", 
    RowBox[{"a", "*", "\[Epsilon]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TPoly", "[", "\[Lambda]_", "]"}], ":=", "  ", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"r", "[", "\[Lambda]", "]"}], "2"], "+", 
        SuperscriptBox["a", "2"]}], ")"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", "[", "\[Lambda]", "]"}], "-", "RP"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", "[", "\[Lambda]", "]"}], "-", "RM"}], ")"}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Epsilon]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"r", "[", "\[Lambda]", "]"}], "2"], "+", 
          SuperscriptBox["a", "2"]}], ")"}]}], "-", 
       RowBox[{"a", "*", "L"}]}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["a", "2"], "\[Epsilon]", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{"z", "[", "\[Lambda]", "]"}], "2"]}], ")"}]}], "+", 
    RowBox[{"a", "*", "L"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DN", "[", "a_", "]"}], " ", ":=", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"27", "-", 
      RowBox[{"45", " ", 
       SuperscriptBox["a", "2"]}], "+", 
      RowBox[{"17", " ", 
       SuperscriptBox["a", "4"]}], "+", 
      SuperscriptBox["a", "6"], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["a", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["a", "2"]}], ")"}]}]}], ")"}], 
    RowBox[{"1", "/", "3"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RISSOMIN", "[", "a_", "]"}], ":=", " ", 
   RowBox[{"3", "+", 
    SqrtBox[
     RowBox[{"3", "+", 
      SuperscriptBox["a", "2"], "+", 
      FractionBox[
       RowBox[{"9", "-", 
        RowBox[{"10", " ", 
         SuperscriptBox["a", "2"]}], "+", 
        SuperscriptBox["a", "4"]}], 
       RowBox[{"DN", "[", "a", "]"}]], "+", 
      RowBox[{"DN", "[", "a", "]"}]}]], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{"72", "+", 
        RowBox[{"8", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           SuperscriptBox["a", "2"]}], ")"}]}], "-", 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{"9", "-", 
            RowBox[{"10", " ", 
             SuperscriptBox["a", "2"]}], "+", 
            SuperscriptBox["a", "4"]}], ")"}]}], 
         RowBox[{"DN", "[", "a", "]"}]], "-", 
        RowBox[{"4", " ", 
         RowBox[{"DN", "[", "a", "]"}]}], "+", 
        FractionBox[
         RowBox[{"64", " ", 
          SuperscriptBox["a", "2"]}], 
         SqrtBox[
          RowBox[{"3", "+", 
           SuperscriptBox["a", "2"], "+", 
           FractionBox[
            RowBox[{"9", "-", 
             RowBox[{"10", " ", 
              SuperscriptBox["a", "2"]}], "+", 
             SuperscriptBox["a", "4"]}], 
            RowBox[{"DN", "[", "a", "]"}]], "+", 
           RowBox[{"DN", "[", "a", "]"}]}]]]}], ")"}]}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RISSOMAX", "[", "a_", "]"}], ":=", " ", 
  RowBox[{"3", "+", 
   SqrtBox[
    RowBox[{"3", "+", 
     SuperscriptBox["a", "2"], "+", 
     FractionBox[
      RowBox[{"9", "-", 
       RowBox[{"10", " ", 
        SuperscriptBox["a", "2"]}], "+", 
       SuperscriptBox["a", "4"]}], 
      RowBox[{"DN", "[", "a", "]"}]], "+", 
     RowBox[{"DN", "[", "a", "]"}]}]], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{"72", "+", 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          SuperscriptBox["a", "2"]}], ")"}]}], "-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{"9", "-", 
           RowBox[{"10", " ", 
            SuperscriptBox["a", "2"]}], "+", 
           SuperscriptBox["a", "4"]}], ")"}]}], 
        RowBox[{"DN", "[", "a", "]"}]], "-", 
       RowBox[{"4", " ", 
        RowBox[{"DN", "[", "a", "]"}]}], "+", 
       FractionBox[
        RowBox[{"64", " ", 
         SuperscriptBox["a", "2"]}], 
        SqrtBox[
         RowBox[{"3", "+", 
          SuperscriptBox["a", "2"], "+", 
          FractionBox[
           RowBox[{"9", "-", 
            RowBox[{"10", " ", 
             SuperscriptBox["a", "2"]}], "+", 
            SuperscriptBox["a", "4"]}], 
           RowBox[{"DN", "[", "a", "]"}]], "+", 
          RowBox[{"DN", "[", "a", "]"}]}]]]}], ")"}]}]}]}]}]}], "Input",
 CellChangeTimes->{
  3.883107282180498*^9, {3.883107468339703*^9, 3.883107481152466*^9}, 
   3.883108714721839*^9, {3.883109220864381*^9, 3.883109235103346*^9}, {
   3.883109867809895*^9, 3.8831098835371847`*^9}, {3.883110038139064*^9, 
   3.883110039380475*^9}, {3.883110115755138*^9, 3.883110136170973*^9}, 
   3.883110371560141*^9, {3.883111357663603*^9, 3.8831113893454237`*^9}, {
   3.8831115995139236`*^9, 3.883111619597858*^9}, {3.883112257866832*^9, 
   3.883112337615856*^9}, {3.883114340014078*^9, 3.883114340349247*^9}, {
   3.883120082014551*^9, 3.883120123612982*^9}},
 CellLabel->"In[2]:=",
 CellID->311979473,ExpressionUUID->"60f6e5ae-7b28-45b8-bfd6-32c949bea28c"]
}, Closed]],

Cell[CellGroupData[{

Cell["ISSO Cases ", "Section",
 CellChangeTimes->{{3.88311141689006*^9, 3.88311142167974*^9}, {
   3.883111469311442*^9, 3.8831114766391983`*^9}, 3.8831215991897306`*^9},
 CellID->144454801,ExpressionUUID->"8ccc180a-b9d0-4504-b409-f22ef5fa0060"],

Cell["Random Cases", "Subsection",
 CellChangeTimes->{{3.883112036514975*^9, 3.883112041026328*^9}},
 CellID->1174557057,ExpressionUUID->"be6561a6-dcb0-4529-b32c-ebe7ea203d48"],

Cell[CellGroupData[{

Cell["ISSO Radial Param - No- IC", "Subsection",
 CellChangeTimes->{{3.883110047500661*^9, 3.883110052326407*^9}, {
  3.883112046620233*^9, 3.8831120487035017`*^9}},
 CellID->32024742,ExpressionUUID->"16c3ae28-008d-4e57-b865-5ca90144b403"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]Test", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1000"}], ",", "1000"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RP", " ", "=", " ", 
   RowBox[{"1", "+", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RM", " ", "=", " ", 
   RowBox[{"1", "-", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RI", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RISSOMIN", "[", "a", "]"}], ",", 
      RowBox[{"RISSOMAX", "[", "a", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orbit", "=", 
   RowBox[{"KerrGeoPlunge", "[", 
    RowBox[{"a", ",", "\"\<ISSORadialParam\>\"", ",", "RI"}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], "  ", "=", 
   RowBox[{"orbit", "[", "\"\<Trajectory\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<\[ScriptCapitalE]\>\"", ",", "\"\<\[ScriptCapitalL]\>\"", " ", ",", 
      "\"\<\[ScriptCapitalQ]\>\""}], "}"}], "/.", 
    RowBox[{"orbit", "[", "\"\<ConstantsOfMotion\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Z1", ",", "Z2"}], "}"}], " ", "=", " ", 
   RowBox[{"orbit", "[", "\"\<PolarRoots\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "[", "y_", "]"}], " ", ":=", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "y", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Round", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"t", "'"}], "[", "\[Lambda]", "]"}], " ", "-", " ", 
        RowBox[{"TPoly", "[", "\[Lambda]", "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "'"}], "[", "\[Lambda]", "]"}], ")"}], "2"], "-", 
        RowBox[{"RPoly", "[", "\[Lambda]", "]"}]}], " ", ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], 
           RowBox[{
            RowBox[{"\[Theta]", "'"}], "[", "\[Lambda]", "]"}]}], ")"}], "2"],
         "-", " ", 
        RowBox[{"Poly\[Theta]", "[", "\[Lambda]", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "\[Lambda]", "]"}], "-", 
        RowBox[{"Poly\[Phi]", "[", "\[Lambda]", "]"}]}]}], "}"}], ")"}], "/.", 
    RowBox[{"\[Lambda]", "->", "\[Lambda]Test"}]}], ",", " ", 
   SuperscriptBox["10", 
    RowBox[{"-", "10"}]]}], "]"}]}], "VerificationTest",
 CellChangeTimes->{{3.88310657759387*^9, 3.8831066416897182`*^9}, {
   3.883106673795027*^9, 3.88310667897701*^9}, {3.883106778905884*^9, 
   3.8831068595918713`*^9}, {3.88310697006936*^9, 3.883106999758329*^9}, 
   3.883107036240039*^9, {3.883107318846674*^9, 3.883107321798922*^9}, {
   3.883107434639326*^9, 3.883107546480668*^9}, {3.883108103882349*^9, 
   3.8831081340192957`*^9}, {3.883108167606614*^9, 3.883108183281124*^9}, {
   3.8831082437392273`*^9, 3.883108292436281*^9}, {3.883108326068178*^9, 
   3.883108351061391*^9}, {3.883108390458651*^9, 3.8831085123518867`*^9}, {
   3.883108544088561*^9, 3.883108717437317*^9}, {3.883109040603861*^9, 
   3.883109178786265*^9}, {3.883109262185955*^9, 3.883109320798314*^9}, {
   3.883109364367632*^9, 3.88310936773879*^9}, {3.883109492802555*^9, 
   3.883109511193709*^9}, {3.883109759845018*^9, 3.883109765534556*^9}, {
   3.883109797444027*^9, 3.883109911971977*^9}, {3.8831113747980623`*^9, 
   3.8831113749053297`*^9}, {3.883111622989965*^9, 3.883111626397387*^9}, {
   3.8831119565710077`*^9, 3.883111958067824*^9}, 3.8831121656583223`*^9, {
   3.8831123682226048`*^9, 3.883112385425603*^9}, {3.883112424945211*^9, 
   3.8831124846673527`*^9}, 3.883112523520092*^9, {3.8831143424174147`*^9, 
   3.883114342992117*^9}},
 CellLabel->"In[12]:=",
 CellID->470629542,ExpressionUUID->"996f4dab-cea4-4e73-9d97-4c3a39841ccc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.8831066482571783`*^9, 3.883106685565295*^9}, {
   3.8831067488785*^9, 3.8831067566993237`*^9}, 3.883106869131613*^9, 
   3.8831075574882393`*^9, {3.883108539944253*^9, 3.88310855919569*^9}, {
   3.883108721897175*^9, 3.883108764193509*^9}, {3.8831090497338877`*^9, 
   3.88310905503519*^9}, {3.883109183129957*^9, 3.883109188891656*^9}},
 CellID->688440493,ExpressionUUID->"512585b2-8ad4-4b0e-b1bb-01dfd1235dff"],

Cell[BoxData[""], "TestOptions",
 CellChangeTimes->{{3.883108772419565*^9, 3.883108782079166*^9}},
 CellID->333963903,ExpressionUUID->"1d678b12-84cd-4c5a-a49d-524ffe927dbf"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{71., {1., 13.}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{20., {5., 10.}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{41., {1., 9.}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"], {
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "TestID-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[\\\"None\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[\"None\", Function[Short[Slot[1], Rational[2, \
3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.\
14703200000000027`\\\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \
\\\"\\\\\\\"Seconds\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[TemplateBox[List[\"0.14703200000000027`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->348422811,ExpressionUUID->"c6296b9c-ef23-4f5b-9132-62e2207ce634"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    ImageSizeCache->{99., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache->{149., {8., 18.}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    ImageSizeCache->{84., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 ImageSizeCache->{134., {8., 18.}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"], {
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "MemoryConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["MemoryConstraint"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "SameTest-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["SameTest"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TestID-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TestID"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TimeConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TimeConstraint"]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{19., {5., 14.}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 ImageSizeCache->{40., {1., 10.}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{94., {8., 18.}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1901762755,ExpressionUUID->"ded866d0-4639-4c5f-bafb-b7154695f363"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ISSO Radial Param - With- IC", "Subsection",
 CellChangeTimes->{{3.883110047500661*^9, 3.883110052326407*^9}, {
  3.883112046620233*^9, 3.883112064681069*^9}},
 CellID->2089301699,ExpressionUUID->"e7c2be78-e0a1-4719-9743-6474f8b87ea5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RP", " ", "=", " ", 
   RowBox[{"1", "+", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RM", " ", "=", " ", 
   RowBox[{"1", "-", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RI", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RISSOMIN", "[", "a", "]"}], ",", 
      RowBox[{"RISSOMAX", "[", "a", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Z1", ",", "Z2"}], "}"}], " ", "=", 
   RowBox[{
    RowBox[{"KerrGeoPlunge", "[", 
     RowBox[{"a", ",", "\"\<ISSORadialParam\>\"", ",", "RI"}], "]"}], "[", 
    "\"\<PolarRoots\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t0", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1000"}], ",", "1000"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r0", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"KerrGeoPlunge", "[", 
         RowBox[{"a", ",", "\"\<ISSORadialParam\>\"", ",", "RI"}], "]"}], 
        "[", "\"\<RadialRoots\>\"", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", "RI"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]0", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ArcCos", "[", "Z1", "]"}], ",", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{"ArcCos", "[", "Z1", "]"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"\[Phi]0", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1000"}], ",", "1000"}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"RI", ",", "R4"}], "}"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"KerrGeoPlunge", "[", 
       RowBox[{"a", ",", "\"\<ISSORadialParam\>\"", ",", "6"}], "]"}], "[", 
      "\"\<RadialRoots\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orbit", "=", 
   RowBox[{"KerrGeoPlunge", "[", 
    RowBox[{"a", ",", "\"\<ISSORadialParam\>\"", ",", "RI", ",", 
     RowBox[{"{", 
      RowBox[{"t0", " ", ",", "r0", ",", "\[Theta]0", ",", " ", "\[Phi]0"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], "  ", "=", 
   RowBox[{"orbit", "[", "\"\<Trajectory\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<\[ScriptCapitalE]\>\"", ",", "\"\<\[ScriptCapitalL]\>\"", " ", ",", 
      "\"\<\[ScriptCapitalQ]\>\""}], "}"}], "/.", 
    RowBox[{"orbit", "[", "\"\<ConstantsOfMotion\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Z1", ",", "Z2"}], "}"}], " ", "=", " ", 
   RowBox[{"orbit", "[", "\"\<PolarRoots\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "[", "y_", "]"}], " ", ":=", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "y", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Round", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"t", "'"}], "[", "\[Lambda]", "]"}], " ", "-", " ", 
        RowBox[{"TPoly", "[", "\[Lambda]", "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "'"}], "[", "\[Lambda]", "]"}], ")"}], "2"], "-", 
        RowBox[{"RPoly", "[", "\[Lambda]", "]"}]}], " ", ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], 
           RowBox[{
            RowBox[{"\[Theta]", "'"}], "[", "\[Lambda]", "]"}]}], ")"}], "2"],
         "-", " ", 
        RowBox[{"Poly\[Theta]", "[", "\[Lambda]", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "\[Lambda]", "]"}], "-", 
        RowBox[{"Poly\[Phi]", "[", "\[Lambda]", "]"}]}]}], "}"}], ")"}], "/.", 
    RowBox[{"\[Lambda]", "->", "\[Lambda]Test"}]}], ",", " ", 
   SuperscriptBox["10", 
    RowBox[{"-", "10"}]]}], "]"}]}], "VerificationTest",
 CellChangeTimes->{{3.88310657759387*^9, 3.8831066416897182`*^9}, {
   3.883106673795027*^9, 3.88310667897701*^9}, {3.883106778905884*^9, 
   3.8831068595918713`*^9}, {3.88310697006936*^9, 3.883106999758329*^9}, 
   3.883107036240039*^9, {3.883107318846674*^9, 3.883107321798922*^9}, {
   3.883107434639326*^9, 3.883107546480668*^9}, {3.883108103882349*^9, 
   3.8831081340192957`*^9}, {3.883108167606614*^9, 3.883108183281124*^9}, {
   3.8831082437392273`*^9, 3.883108292436281*^9}, {3.883108326068178*^9, 
   3.883108351061391*^9}, {3.883108390458651*^9, 3.8831085123518867`*^9}, {
   3.883108544088561*^9, 3.883108717437317*^9}, {3.883109040603861*^9, 
   3.883109178786265*^9}, {3.883109262185955*^9, 3.883109320798314*^9}, {
   3.883109364367632*^9, 3.88310936773879*^9}, {3.883109492802555*^9, 
   3.883109511193709*^9}, {3.883109759845018*^9, 3.883109765534556*^9}, {
   3.883109797444027*^9, 3.883109911971977*^9}, {3.8831113747980623`*^9, 
   3.8831113749053297`*^9}, {3.883111622989965*^9, 3.883111626397387*^9}, {
   3.8831119565710077`*^9, 3.883111958067824*^9}, {3.883112089613717*^9, 
   3.8831122104189157`*^9}, 3.883112576644726*^9, 3.8831126105021353`*^9, {
   3.883112642239316*^9, 3.883112657709629*^9}, {3.883112820459496*^9, 
   3.883112954828569*^9}, {3.883113100764386*^9, 3.8831131454201517`*^9}},
 CellLabel->"In[13]:=",
 CellID->1388542996,ExpressionUUID->"daa7d3e9-6e15-4140-8505-b71ccf84194b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.8831066482571783`*^9, 3.883106685565295*^9}, {
   3.8831067488785*^9, 3.8831067566993237`*^9}, 3.883106869131613*^9, 
   3.8831075574882393`*^9, {3.883108539944253*^9, 3.88310855919569*^9}, {
   3.883108721897175*^9, 3.883108764193509*^9}, {3.8831090497338877`*^9, 
   3.88310905503519*^9}, {3.883109183129957*^9, 3.883109188891656*^9}},
 CellID->537341823,ExpressionUUID->"ad7b7010-8103-4890-81b4-1d05d738899d"],

Cell[BoxData[""], "TestOptions",
 CellChangeTimes->{{3.883108772419565*^9, 3.883108782079166*^9}},
 CellID->935283526,ExpressionUUID->"cd44a9a6-ee5f-41ba-bc29-a41c9de362f1"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{71., {1., 13.}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{20., {5., 10.}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{41., {1., 9.}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"], {
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "TestID-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[\\\"None\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[\"None\", Function[Short[Slot[1], Rational[2, \
3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.\
005351000000000106`\\\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \
\\\"\\\\\\\"Seconds\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[TemplateBox[List[\"0.005351000000000106`\", \"\\\"s\\\
\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->494541942,ExpressionUUID->"3be0db14-884b-4018-9d29-0f67fb531388"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    ImageSizeCache->{99., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache->{149., {8., 18.}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    ImageSizeCache->{84., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 ImageSizeCache->{134., {8., 18.}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"], {
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "MemoryConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["MemoryConstraint"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "SameTest-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["SameTest"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TestID-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TestID"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TimeConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TimeConstraint"]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{19., {5., 14.}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 ImageSizeCache->{40., {1., 10.}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{94., {8., 18.}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1004705304,ExpressionUUID->"c0835b3c-16e6-4bee-a5a2-426bb2eb0477"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ISSO Radial Param -ExtremalCase", "Subsection",
 CellChangeTimes->{{3.883110047500661*^9, 3.883110052326407*^9}, {
  3.883112046620233*^9, 3.883112064681069*^9}, {3.8831132081501637`*^9, 
  3.883113211916842*^9}},
 CellID->365425999,ExpressionUUID->"99330426-354c-46fc-93fc-f9902c83b95b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RP", " ", "=", " ", 
   RowBox[{"1", "+", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RM", " ", "=", " ", 
   RowBox[{"1", "-", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RI", " ", "=", 
   RowBox[{"RISSOMAX", "[", "a", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Z1", ",", "Z2"}], "}"}], " ", "=", 
   RowBox[{
    RowBox[{"KerrGeoPlunge", "[", 
     RowBox[{"a", ",", "\"\<ISSORadialParam\>\"", ",", "RI"}], "]"}], "[", 
    "\"\<PolarRoots\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t0", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1000"}], ",", "1000"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r0", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"KerrGeoPlunge", "[", 
         RowBox[{"a", ",", "\"\<ISSORadialParam\>\"", ",", "RI"}], "]"}], 
        "[", "\"\<RadialRoots\>\"", "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", "RI"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]0", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ArcCos", "[", "Z1", "]"}], ",", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{"ArcCos", "[", "Z1", "]"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"\[Phi]0", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1000"}], ",", "1000"}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"RI", ",", "R4"}], "}"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"KerrGeoPlunge", "[", 
       RowBox[{"a", ",", "\"\<ISSORadialParam\>\"", ",", "6"}], "]"}], "[", 
      "\"\<RadialRoots\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orbit", "=", 
   RowBox[{"KerrGeoPlunge", "[", 
    RowBox[{"a", ",", "\"\<ISSORadialParam\>\"", ",", "RI", ",", 
     RowBox[{"{", 
      RowBox[{"t0", " ", ",", "r0", ",", "\[Theta]0", ",", " ", "\[Phi]0"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], "  ", "=", 
   RowBox[{"orbit", "[", "\"\<Trajectory\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<\[ScriptCapitalE]\>\"", ",", "\"\<\[ScriptCapitalL]\>\"", " ", ",", 
      "\"\<\[ScriptCapitalQ]\>\""}], "}"}], "/.", 
    RowBox[{"orbit", "[", "\"\<ConstantsOfMotion\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Z1", ",", "Z2"}], "}"}], " ", "=", " ", 
   RowBox[{"orbit", "[", "\"\<PolarRoots\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "[", "y_", "]"}], " ", ":=", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "y", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Round", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"t", "'"}], "[", "\[Lambda]", "]"}], " ", "-", " ", 
        RowBox[{"TPoly", "[", "\[Lambda]", "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "'"}], "[", "\[Lambda]", "]"}], ")"}], "2"], "-", 
        RowBox[{"RPoly", "[", "\[Lambda]", "]"}]}], " ", ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], 
           RowBox[{
            RowBox[{"\[Theta]", "'"}], "[", "\[Lambda]", "]"}]}], ")"}], "2"],
         "-", " ", 
        RowBox[{"Poly\[Theta]", "[", "\[Lambda]", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "\[Lambda]", "]"}], "-", 
        RowBox[{"Poly\[Phi]", "[", "\[Lambda]", "]"}]}]}], "}"}], ")"}], "/.", 
    RowBox[{"\[Lambda]", "->", "\[Lambda]Test"}]}], ",", " ", 
   SuperscriptBox["10", 
    RowBox[{"-", "10"}]]}], "]"}]}], "VerificationTest",
 CellChangeTimes->{{3.88310657759387*^9, 3.8831066416897182`*^9}, {
   3.883106673795027*^9, 3.88310667897701*^9}, {3.883106778905884*^9, 
   3.8831068595918713`*^9}, {3.88310697006936*^9, 3.883106999758329*^9}, 
   3.883107036240039*^9, {3.883107318846674*^9, 3.883107321798922*^9}, {
   3.883107434639326*^9, 3.883107546480668*^9}, {3.883108103882349*^9, 
   3.8831081340192957`*^9}, {3.883108167606614*^9, 3.883108183281124*^9}, {
   3.8831082437392273`*^9, 3.883108292436281*^9}, {3.883108326068178*^9, 
   3.883108351061391*^9}, {3.883108390458651*^9, 3.8831085123518867`*^9}, {
   3.883108544088561*^9, 3.883108717437317*^9}, {3.883109040603861*^9, 
   3.883109178786265*^9}, {3.883109262185955*^9, 3.883109320798314*^9}, {
   3.883109364367632*^9, 3.88310936773879*^9}, {3.883109492802555*^9, 
   3.883109511193709*^9}, {3.883109759845018*^9, 3.883109765534556*^9}, {
   3.883109797444027*^9, 3.883109911971977*^9}, {3.8831113747980623`*^9, 
   3.8831113749053297`*^9}, {3.883111622989965*^9, 3.883111626397387*^9}, {
   3.8831119565710077`*^9, 3.883111958067824*^9}, {3.883112089613717*^9, 
   3.8831122104189157`*^9}, 3.883112576644726*^9, 3.8831126105021353`*^9, {
   3.883112642239316*^9, 3.883112657709629*^9}, {3.883112820459496*^9, 
   3.883112954828569*^9}, {3.883113100764386*^9, 3.8831131454201517`*^9}, {
   3.883113232542198*^9, 3.883113245529957*^9}},
 CellLabel->"In[15]:=",
 CellID->2059018420,ExpressionUUID->"f80707f1-b09e-4b10-914e-05bfb137d298"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.8831066482571783`*^9, 3.883106685565295*^9}, {
   3.8831067488785*^9, 3.8831067566993237`*^9}, 3.883106869131613*^9, 
   3.8831075574882393`*^9, {3.883108539944253*^9, 3.88310855919569*^9}, {
   3.883108721897175*^9, 3.883108764193509*^9}, {3.8831090497338877`*^9, 
   3.88310905503519*^9}, {3.883109183129957*^9, 3.883109188891656*^9}},
 CellID->1371097182,ExpressionUUID->"a788c3ec-2a32-4d40-afa4-d353b1f61097"],

Cell[BoxData[""], "TestOptions",
 CellChangeTimes->{{3.883108772419565*^9, 3.883108782079166*^9}},
 CellID->1530805564,ExpressionUUID->"2fe666b3-72ad-437c-877a-ce423db59253"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{71., {1., 13.}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{20., {5., 10.}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{41., {1., 9.}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"], {
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "TestID-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[\\\"None\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[\"None\", Function[Short[Slot[1], Rational[2, \
3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.\
004394999999999705`\\\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \
\\\"\\\\\\\"Seconds\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[TemplateBox[List[\"0.004394999999999705`\", \"\\\"s\\\
\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->934882551,ExpressionUUID->"84dc6ab6-a2a8-4916-b3e7-095956bbca72"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    ImageSizeCache->{99., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache->{149., {8., 18.}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    ImageSizeCache->{84., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 ImageSizeCache->{134., {8., 18.}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"], {
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "MemoryConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["MemoryConstraint"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "SameTest-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["SameTest"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TestID-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TestID"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TimeConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TimeConstraint"]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{19., {5., 14.}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 ImageSizeCache->{40., {1., 10.}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{94., {8., 18.}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1580673205,ExpressionUUID->"a62ce1dc-d68f-4a09-a81a-df1db07ad464"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ISSO InclinedParam", "Subsection",
 CellChangeTimes->{{3.8831100240876904`*^9, 3.8831100332466087`*^9}},
 CellID->1801190718,ExpressionUUID->"012c4335-d177-4aa3-aa35-285cd3dc6a03"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.883111979163558*^9, 3.883111992981908*^9}},
 CellLabel->"In[293]:=",
 CellID->2021415107,ExpressionUUID->"39e0b3c6-5a84-45ca-9a80-cb0ae06e2938"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]Test", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1000"}], ",", "1000"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RP", " ", "=", " ", 
   RowBox[{"1", "+", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RM", " ", "=", " ", 
   RowBox[{"1", "-", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]INC", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "\[Pi]"}], "2"], ",", 
      FractionBox["\[Pi]", "2"]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orbit", "=", 
   RowBox[{"KerrGeoPlunge", "[", 
    RowBox[{"a", ",", "\"\<ISSOIncParam\>\"", ",", "\[Theta]INC"}], "  ", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], "  ", "=", 
   RowBox[{"orbit", "[", "\"\<Trajectory\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<\[ScriptCapitalE]\>\"", ",", "\"\<\[ScriptCapitalL]\>\"", " ", ",", 
      "\"\<\[ScriptCapitalQ]\>\""}], "}"}], "/.", 
    RowBox[{"orbit", "[", "\"\<ConstantsOfMotion\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Z1", ",", "Z2"}], "}"}], " ", "=", " ", 
   RowBox[{"orbit", "[", "\"\<PolarRoots\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "[", "y_", "]"}], " ", ":=", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "y", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Round", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"t", "'"}], "[", "\[Lambda]", "]"}], " ", "-", " ", 
        RowBox[{"TPoly", "[", "\[Lambda]", "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "'"}], "[", "\[Lambda]", "]"}], ")"}], "2"], "-", 
        RowBox[{"RPoly", "[", "\[Lambda]", "]"}]}], " ", ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], 
           RowBox[{
            RowBox[{"\[Theta]", "'"}], "[", "\[Lambda]", "]"}]}], ")"}], "2"],
         "-", " ", 
        RowBox[{"Poly\[Theta]", "[", "\[Lambda]", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "\[Lambda]", "]"}], "-", 
        RowBox[{"Poly\[Phi]", "[", "\[Lambda]", "]"}]}]}], "}"}], ")"}], "/.", 
    RowBox[{"\[Lambda]", "->", "\[Lambda]Test"}]}], ",", " ", 
   SuperscriptBox["10", 
    RowBox[{"-", "10"}]]}], "]"}]}], "VerificationTest",
 CellChangeTimes->{{3.883109942308372*^9, 3.883109952034876*^9}, {
  3.8831113798917723`*^9, 3.883111380834836*^9}, {3.8831144222488813`*^9, 
  3.883114467219006*^9}},
 CellLabel->"In[16]:=",
 CellID->1262417770,ExpressionUUID->"3fd85bb7-8c74-40ea-a22e-e808ea93e7f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{3.883109945010754*^9},
 CellID->317028030,ExpressionUUID->"e2a2000a-7331-4bbd-902f-f91de8955c33"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{71., {1., 13.}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{20., {5., 10.}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{41., {1., 9.}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"], {
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "TestID-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[\\\"None\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[\"None\", Function[Short[Slot[1], Rational[2, \
3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.\
002397999999999456`\\\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \
\\\"\\\\\\\"Seconds\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[TemplateBox[List[\"0.002397999999999456`\", \"\\\"s\\\
\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->749645323,ExpressionUUID->"47d0acca-3733-4999-836c-3f503d74afde"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    ImageSizeCache->{99., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache->{149., {8., 18.}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    ImageSizeCache->{84., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 ImageSizeCache->{134., {8., 18.}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"], {
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "MemoryConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["MemoryConstraint"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "SameTest-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["SameTest"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TestID-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TestID"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TimeConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TimeConstraint"]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{19., {5., 14.}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 ImageSizeCache->{40., {1., 10.}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{94., {8., 18.}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->2386712,ExpressionUUID->"8b80be24-abdd-412e-9e64-2d9c2d393d73"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ISSO Radial Param - With- IC", "Subsection",
 CellChangeTimes->{{3.883110047500661*^9, 3.883110052326407*^9}, {
  3.883112046620233*^9, 3.883112064681069*^9}},
 CellID->1853988836,ExpressionUUID->"59b6523a-99aa-4518-8ef0-ad76b8bb0fd1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RP", " ", "=", " ", 
   RowBox[{"1", "+", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RM", " ", "=", " ", 
   RowBox[{"1", "-", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]INC", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "\[Pi]"}], "2"], ",", 
      FractionBox["\[Pi]", "2"]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Z1", ",", "Z2"}], "}"}], " ", "=", 
   RowBox[{
    RowBox[{"KerrGeoPlunge", "[", 
     RowBox[{"a", ",", "\"\<ISSOIncParam\>\"", ",", "\[Theta]INC"}], " ", 
     "]"}], "[", "\"\<PolarRoots\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RI", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"KerrGeoPlunge", "[", 
      RowBox[{"a", ",", "\"\<ISSOIncParam\>\"", ",", "\[Theta]INC"}], " ", 
      "]"}], "[", "\"\<RadialRoots\>\"", "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R4", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"KerrGeoPlunge", "[", 
      RowBox[{"a", ",", "\"\<ISSOIncParam\>\"", ",", "\[Theta]INC"}], " ", 
      "]"}], "[", "\"\<RadialRoots\>\"", "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t0", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1000"}], ",", "1000"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r0", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"R4", ",", "RI"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]0", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ArcCos", "[", "Z1", "]"}], ",", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{"ArcCos", "[", "Z1", "]"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"\[Phi]0", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1000"}], ",", "1000"}], "}"}], "]"}]}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orbit", "=", 
   RowBox[{"KerrGeoPlunge", "[", 
    RowBox[{"a", ",", "\"\<ISSOIncParam\>\"", ",", "\[Theta]INC", ",", 
     RowBox[{"{", 
      RowBox[{"t0", " ", ",", "r0", ",", "\[Theta]0", ",", " ", "\[Phi]0"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], "  ", "=", 
   RowBox[{"orbit", "[", "\"\<Trajectory\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<\[ScriptCapitalE]\>\"", ",", "\"\<\[ScriptCapitalL]\>\"", " ", ",", 
      "\"\<\[ScriptCapitalQ]\>\""}], "}"}], "/.", 
    RowBox[{"orbit", "[", "\"\<ConstantsOfMotion\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "[", "y_", "]"}], " ", ":=", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "y", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Round", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"t", "'"}], "[", "\[Lambda]", "]"}], " ", "-", " ", 
        RowBox[{"TPoly", "[", "\[Lambda]", "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "'"}], "[", "\[Lambda]", "]"}], ")"}], "2"], "-", 
        RowBox[{"RPoly", "[", "\[Lambda]", "]"}]}], " ", ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], 
           RowBox[{
            RowBox[{"\[Theta]", "'"}], "[", "\[Lambda]", "]"}]}], ")"}], "2"],
         "-", " ", 
        RowBox[{"Poly\[Theta]", "[", "\[Lambda]", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "\[Lambda]", "]"}], "-", 
        RowBox[{"Poly\[Phi]", "[", "\[Lambda]", "]"}]}]}], "}"}], ")"}], "/.", 
    RowBox[{"\[Lambda]", "->", "\[Lambda]Test"}]}], ",", " ", 
   SuperscriptBox["10", 
    RowBox[{"-", "10"}]]}], "]"}]}], "VerificationTest",
 CellChangeTimes->{{3.88310657759387*^9, 3.8831066416897182`*^9}, {
   3.883106673795027*^9, 3.88310667897701*^9}, {3.883106778905884*^9, 
   3.8831068595918713`*^9}, {3.88310697006936*^9, 3.883106999758329*^9}, 
   3.883107036240039*^9, {3.883107318846674*^9, 3.883107321798922*^9}, {
   3.883107434639326*^9, 3.883107546480668*^9}, {3.883108103882349*^9, 
   3.8831081340192957`*^9}, {3.883108167606614*^9, 3.883108183281124*^9}, {
   3.8831082437392273`*^9, 3.883108292436281*^9}, {3.883108326068178*^9, 
   3.883108351061391*^9}, {3.883108390458651*^9, 3.8831085123518867`*^9}, {
   3.883108544088561*^9, 3.883108717437317*^9}, {3.883109040603861*^9, 
   3.883109178786265*^9}, {3.883109262185955*^9, 3.883109320798314*^9}, {
   3.883109364367632*^9, 3.88310936773879*^9}, {3.883109492802555*^9, 
   3.883109511193709*^9}, {3.883109759845018*^9, 3.883109765534556*^9}, {
   3.883109797444027*^9, 3.883109911971977*^9}, {3.8831113747980623`*^9, 
   3.8831113749053297`*^9}, {3.883111622989965*^9, 3.883111626397387*^9}, {
   3.8831119565710077`*^9, 3.883111958067824*^9}, {3.883112089613717*^9, 
   3.8831122104189157`*^9}, 3.883112576644726*^9, 3.8831126105021353`*^9, {
   3.883112642239316*^9, 3.883112657709629*^9}, {3.883112820459496*^9, 
   3.883112954828569*^9}, {3.883113100764386*^9, 3.8831131454201517`*^9}, {
   3.8831145275953608`*^9, 3.883114541018065*^9}, {3.883114579570174*^9, 
   3.8831146114325*^9}, {3.883114668620606*^9, 3.883114701047781*^9}, {
   3.883114755172064*^9, 3.8831148273300247`*^9}, {3.883114926806622*^9, 
   3.8831149565171757`*^9}, {3.88311990241527*^9, 3.883119921892305*^9}, {
   3.8831199791492853`*^9, 3.88311998996876*^9}},
 CellLabel->"In[17]:=",
 CellID->2648682,ExpressionUUID->"2bf6e623-c0c4-477f-9280-61ed4f6034e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.8831066482571783`*^9, 3.883106685565295*^9}, {
   3.8831067488785*^9, 3.8831067566993237`*^9}, 3.883106869131613*^9, 
   3.8831075574882393`*^9, {3.883108539944253*^9, 3.88310855919569*^9}, {
   3.883108721897175*^9, 3.883108764193509*^9}, {3.8831090497338877`*^9, 
   3.88310905503519*^9}, {3.883109183129957*^9, 3.883109188891656*^9}},
 CellID->1566725434,ExpressionUUID->"f53dfb01-e62d-456c-972b-fb34e8243c26"],

Cell[BoxData[""], "TestOptions",
 CellChangeTimes->{{3.883108772419565*^9, 3.883108782079166*^9}},
 CellID->1657373371,ExpressionUUID->"145b5106-85b4-40e9-82a5-099a1eb6563d"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{71., {1., 13.}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{20., {5., 10.}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{41., {1., 9.}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"], {
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "TestID-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[\\\"None\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[\"None\", Function[Short[Slot[1], Rational[2, \
3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.\
0062179999999987245`\\\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \
\\\"\\\\\\\"Seconds\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[TemplateBox[List[\"0.0062179999999987245`\", \
\"\\\"s\\\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, \
Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->622226412,ExpressionUUID->"b7df4cec-5f01-4fc7-98e5-5871c43f7b23"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    ImageSizeCache->{99., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache->{149., {8., 18.}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    ImageSizeCache->{84., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 ImageSizeCache->{134., {8., 18.}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"], {
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "MemoryConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["MemoryConstraint"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "SameTest-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["SameTest"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TestID-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TestID"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TimeConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TimeConstraint"]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{19., {5., 14.}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 ImageSizeCache->{40., {1., 10.}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{94., {8., 18.}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1661429241,ExpressionUUID->"e92cc8e9-9482-45e5-89bc-22eae0a441de"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ISSO Inc Param -ExtremalCase", "Subsection",
 CellChangeTimes->{{3.883110047500661*^9, 3.883110052326407*^9}, {
  3.883112046620233*^9, 3.883112064681069*^9}, {3.8831132081501637`*^9, 
  3.883113211916842*^9}, {3.8831203670088863`*^9, 3.88312036869736*^9}},
 CellID->1816730269,ExpressionUUID->"6b572597-caa7-4798-aef5-adac3014e131"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RP", " ", "=", " ", 
   RowBox[{"1", "+", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RM", " ", "=", " ", 
   RowBox[{"1", "-", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]INC", " ", "=", 
   RowBox[{"-", " ", 
    FractionBox["\[Pi]", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Z1", ",", "Z2"}], "}"}], " ", "=", 
   RowBox[{
    RowBox[{"KerrGeoPlunge", "[", 
     RowBox[{"a", ",", "\"\<ISSOIncParam\>\"", ",", "\[Theta]INC"}], " ", 
     "]"}], "[", "\"\<PolarRoots\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RI", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"KerrGeoPlunge", "[", 
      RowBox[{"a", ",", "\"\<ISSOIncParam\>\"", ",", "\[Theta]INC"}], " ", 
      "]"}], "[", "\"\<RadialRoots\>\"", "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R4", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"KerrGeoPlunge", "[", 
      RowBox[{"a", ",", "\"\<ISSOIncParam\>\"", ",", "\[Theta]INC"}], " ", 
      "]"}], "[", "\"\<RadialRoots\>\"", "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t0", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1000"}], ",", "1000"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r0", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"R4", ",", "RI"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]0", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ArcCos", "[", "Z1", "]"}], ",", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{"ArcCos", "[", "Z1", "]"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"\[Phi]0", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1000"}], ",", "1000"}], "}"}], "]"}]}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orbit", "=", 
   RowBox[{"KerrGeoPlunge", "[", 
    RowBox[{"a", ",", "\"\<ISSOIncParam\>\"", ",", "\[Theta]INC", ",", 
     RowBox[{"{", 
      RowBox[{"t0", " ", ",", "r0", ",", "\[Theta]0", ",", " ", "\[Phi]0"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], "  ", "=", 
   RowBox[{"orbit", "[", "\"\<Trajectory\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<\[ScriptCapitalE]\>\"", ",", "\"\<\[ScriptCapitalL]\>\"", " ", ",", 
      "\"\<\[ScriptCapitalQ]\>\""}], "}"}], "/.", 
    RowBox[{"orbit", "[", "\"\<ConstantsOfMotion\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "[", "y_", "]"}], " ", ":=", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "y", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Round", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"t", "'"}], "[", "\[Lambda]", "]"}], " ", "-", " ", 
        RowBox[{"TPoly", "[", "\[Lambda]", "]"}]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "'"}], "[", "\[Lambda]", "]"}], ")"}], "2"], "-", 
        RowBox[{"RPoly", "[", "\[Lambda]", "]"}]}], " ", ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], 
           RowBox[{
            RowBox[{"\[Theta]", "'"}], "[", "\[Lambda]", "]"}]}], ")"}], "2"],
         "-", " ", 
        RowBox[{"Poly\[Theta]", "[", "\[Lambda]", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "\[Lambda]", "]"}], "-", 
        RowBox[{"Poly\[Phi]", "[", "\[Lambda]", "]"}]}]}], "}"}], ")"}], "/.", 
    RowBox[{"\[Lambda]", "->", "\[Lambda]Test"}]}], ",", " ", 
   SuperscriptBox["10", 
    RowBox[{"-", "10"}]]}], "]"}]}], "VerificationTest",
 CellChangeTimes->{{3.88310657759387*^9, 3.8831066416897182`*^9}, {
   3.883106673795027*^9, 3.88310667897701*^9}, {3.883106778905884*^9, 
   3.8831068595918713`*^9}, {3.88310697006936*^9, 3.883106999758329*^9}, 
   3.883107036240039*^9, {3.883107318846674*^9, 3.883107321798922*^9}, {
   3.883107434639326*^9, 3.883107546480668*^9}, {3.883108103882349*^9, 
   3.8831081340192957`*^9}, {3.883108167606614*^9, 3.883108183281124*^9}, {
   3.8831082437392273`*^9, 3.883108292436281*^9}, {3.883108326068178*^9, 
   3.883108351061391*^9}, {3.883108390458651*^9, 3.8831085123518867`*^9}, {
   3.883108544088561*^9, 3.883108717437317*^9}, {3.883109040603861*^9, 
   3.883109178786265*^9}, {3.883109262185955*^9, 3.883109320798314*^9}, {
   3.883109364367632*^9, 3.88310936773879*^9}, {3.883109492802555*^9, 
   3.883109511193709*^9}, {3.883109759845018*^9, 3.883109765534556*^9}, {
   3.883109797444027*^9, 3.883109911971977*^9}, {3.8831113747980623`*^9, 
   3.8831113749053297`*^9}, {3.883111622989965*^9, 3.883111626397387*^9}, {
   3.8831119565710077`*^9, 3.883111958067824*^9}, {3.883112089613717*^9, 
   3.8831122104189157`*^9}, 3.883112576644726*^9, 3.8831126105021353`*^9, {
   3.883112642239316*^9, 3.883112657709629*^9}, {3.883112820459496*^9, 
   3.883112954828569*^9}, {3.883113100764386*^9, 3.8831131454201517`*^9}, {
   3.883113232542198*^9, 3.883113245529957*^9}, {3.883120396588708*^9, 
   3.883120451087789*^9}},
 CellLabel->"In[18]:=",
 CellID->1904177214,ExpressionUUID->"ef681750-8db6-4630-acd6-53c112a0ea2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.8831066482571783`*^9, 3.883106685565295*^9}, {
   3.8831067488785*^9, 3.8831067566993237`*^9}, 3.883106869131613*^9, 
   3.8831075574882393`*^9, {3.883108539944253*^9, 3.88310855919569*^9}, {
   3.883108721897175*^9, 3.883108764193509*^9}, {3.8831090497338877`*^9, 
   3.88310905503519*^9}, {3.883109183129957*^9, 3.883109188891656*^9}},
 CellID->1705128104,ExpressionUUID->"8ead642d-501a-4e90-8368-e7645d799f3f"],

Cell[BoxData[""], "TestOptions",
 CellChangeTimes->{{3.883108772419565*^9, 3.883108782079166*^9}},
 CellID->2066258360,ExpressionUUID->"05b0d954-2bc4-44a0-bac3-e6e90a2ee590"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{71., {1., 13.}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{20., {5., 10.}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{41., {1., 9.}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"], {
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "TestID-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[\\\"None\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[\"None\", Function[Short[Slot[1], Rational[2, \
3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.\
003542000000000378`\\\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \
\\\"\\\\\\\"Seconds\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[TemplateBox[List[\"0.003542000000000378`\", \"\\\"s\\\
\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->2040226521,ExpressionUUID->"e2ea3c18-3c8d-43ad-968a-5d603fe16c27"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    ImageSizeCache->{99., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache->{149., {8., 18.}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    ImageSizeCache->{84., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 ImageSizeCache->{134., {8., 18.}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"], {
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "MemoryConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["MemoryConstraint"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "SameTest-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["SameTest"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TestID-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TestID"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TimeConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TimeConstraint"]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{19., {5., 14.}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 ImageSizeCache->{40., {1., 10.}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{94., {8., 18.}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1215746798,ExpressionUUID->"688f93db-acf7-442d-a667-517e74f142b0"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Generic Cases ", "Section",
 CellChangeTimes->{{3.883111448373128*^9, 3.8831114732064857`*^9}, 
   3.8831298713711033`*^9},
 CellID->1894512895,ExpressionUUID->"e40e66bf-cd59-4519-bd48-0c72765bf075"],

Cell[TextData[{
 "Example Parameters for 4 Real roots 3 of which outside ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "+"], TraditionalForm]],ExpressionUUID->
  "c086013c-1b4e-4ef5-876a-b652de2cfffa"],
 "\n\t\ta =0.1;\n\t\t\[Epsilon] = 0.956;\n\t\tL =2.55;\n\t\tQ =6.54;\nExample \
Parameters for 4 Real roots 3 of which Inside ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "-"], TraditionalForm]],ExpressionUUID->
  "ccd5dfa9-e47e-450f-a9bc-38936bf387c3"],
 "\n\t\ta = 0.987;\n\t\t\[Epsilon] = 0.101;\n\t\tL = 0.39;\n\t\tQ = \
1.\[Times]10^-8;"
}], "Text",
 CellChangeTimes->{{3.883110168697486*^9, 3.883110263541409*^9}},
 CellID->242556382,ExpressionUUID->"5cb48a1b-1dfc-4dfd-98d0-554468144e05"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.88311029853716*^9, 3.883110301879065*^9}, {
   3.883110345618822*^9, 3.883110364669442*^9}, {3.883110544949354*^9, 
   3.883110545128026*^9}, {3.883111014304261*^9, 3.8831110464653387`*^9}, {
   3.883111077209721*^9, 3.883111080163495*^9}, 3.883111578615205*^9},
 CellID->970687297,ExpressionUUID->"9161983a-3e3b-44b5-81a5-777bcc3bd9be"],

Cell[CellGroupData[{

Cell["Without ICs", "Subsubsection",
 CellChangeTimes->{{3.8831115408957253`*^9, 3.883111548955904*^9}},
 CellID->800164714,ExpressionUUID->"043d22c4-18ef-492e-a293-3bc60ebd983e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RP", " ", "=", " ", 
   RowBox[{"1", "+", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RM", " ", "=", " ", 
   RowBox[{"1", "-", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "15"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orbit", " ", "=", " ", 
   RowBox[{"KerrGeoPlunge", "[", 
    RowBox[{"a", ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Z1", ",", "Z2"}], "}"}], "=", 
   RowBox[{"orbit", "[", "\"\<PolarRoots\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], " ", "=", 
   " ", 
   RowBox[{"orbit", "[", "\"\<Trajectory\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<\[ScriptCapitalE]\>\"", ",", "\"\<\[ScriptCapitalL]\>\"", " ", ",", 
      "\"\<\[ScriptCapitalQ]\>\""}], "}"}], "/.", 
    RowBox[{"orbit", "[", "\"\<ConstantsOfMotion\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"z", "[", "\[Lambda]_", "]"}], ":=", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Re", "[", 
  RowBox[{"Round", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"t", "'"}], "[", "\[Lambda]", "]"}], " ", "-", " ", 
         RowBox[{"TPoly", "[", "\[Lambda]", "]"}]}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r", "'"}], "[", "\[Lambda]", "]"}], ")"}], "2"], "-", 
         RowBox[{"RPoly", "[", "\[Lambda]", "]"}]}], " ", ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], 
            RowBox[{
             RowBox[{"\[Theta]", "'"}], "[", "\[Lambda]", "]"}]}], ")"}], 
          "2"], "-", " ", 
         RowBox[{"Poly\[Theta]", "[", "\[Lambda]", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Phi]", "'"}], "[", "\[Lambda]", "]"}], "-", 
         RowBox[{"Poly\[Phi]", "[", "\[Lambda]", "]"}]}]}], "}"}], ")"}], "/.", 
     RowBox[{"\[Lambda]", "->", "\[Lambda]Test"}]}], ",", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "8"}]]}], "]"}], "]"}]}], "VerificationTest",
 CellChangeTimes->{{3.8831102815267687`*^9, 3.8831103299061537`*^9}, {
  3.883110383459427*^9, 3.883110383689026*^9}, {3.88311073202383*^9, 
  3.883110816806859*^9}, {3.883111068141037*^9, 3.883111105421492*^9}, {
  3.883111136158946*^9, 3.883111136685961*^9}, {3.883111172875813*^9, 
  3.8831112291193113`*^9}, {3.883111581010158*^9, 3.883111581773801*^9}, {
  3.883121609417039*^9, 3.883121681633728*^9}, {3.883121897594798*^9, 
  3.883121897883399*^9}},
 CellLabel->"In[19]:=",
 CellID->1128812697,ExpressionUUID->"1fdff36a-0e65-4a08-9055-83af1b6baaf7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.883110285501178*^9, 3.8831102875866213`*^9}},
 CellID->1084460881,ExpressionUUID->"836ec355-5cf4-4054-a785-89c0adba1615"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{71., {1., 13.}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{20., {5., 10.}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{41., {1., 9.}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"], {
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "TestID-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[\\\"None\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[\"None\", Function[Short[Slot[1], Rational[2, \
3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.\
2953650000000003`\\\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \
\\\"\\\\\\\"Seconds\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[TemplateBox[List[\"0.2953650000000003`\", \"\\\"s\\\"\
\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->22269357,ExpressionUUID->"37b50920-049f-4b4a-bdbc-fbdbe79bdc9f"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    ImageSizeCache->{99., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache->{149., {8., 18.}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    ImageSizeCache->{84., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 ImageSizeCache->{134., {8., 18.}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"], {
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "MemoryConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["MemoryConstraint"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "SameTest-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["SameTest"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TestID-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TestID"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TimeConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TimeConstraint"]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{19., {5., 14.}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 ImageSizeCache->{40., {1., 10.}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{94., {8., 18.}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->618928521,ExpressionUUID->"e15e665e-64a9-428d-b5e1-c118e464489b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["With ICs", "Subsubsection",
 CellChangeTimes->{{3.8831115408957253`*^9, 3.883111548955904*^9}, {
  3.883129400104786*^9, 3.8831294010940313`*^9}},
 CellID->866413251,ExpressionUUID->"e0c05458-5181-4e36-b29c-03ae5d1f55d1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RP", " ", "=", " ", 
   RowBox[{"1", "+", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RM", " ", "=", " ", 
   RowBox[{"1", "-", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "15"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orbit", " ", "=", " ", 
   RowBox[{"KerrGeoPlunge", "[", 
    RowBox[{"a", ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Z1", ",", "Z2"}], "}"}], "=", 
   RowBox[{"orbit", "[", "\"\<PolarRoots\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], " ", "=", 
   " ", 
   RowBox[{"orbit", "[", "\"\<Trajectory\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<\[ScriptCapitalE]\>\"", ",", "\"\<\[ScriptCapitalL]\>\"", " ", ",", 
      "\"\<\[ScriptCapitalQ]\>\""}], "}"}], "/.", 
    RowBox[{"orbit", "[", "\"\<ConstantsOfMotion\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"z", "[", "\[Lambda]_", "]"}], ":=", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Re", "[", 
  RowBox[{"Round", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"t", "'"}], "[", "\[Lambda]", "]"}], " ", "-", " ", 
         RowBox[{"TPoly", "[", "\[Lambda]", "]"}]}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r", "'"}], "[", "\[Lambda]", "]"}], ")"}], "2"], "-", 
         RowBox[{"RPoly", "[", "\[Lambda]", "]"}]}], " ", ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], 
            RowBox[{
             RowBox[{"\[Theta]", "'"}], "[", "\[Lambda]", "]"}]}], ")"}], 
          "2"], "-", " ", 
         RowBox[{"Poly\[Theta]", "[", "\[Lambda]", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Phi]", "'"}], "[", "\[Lambda]", "]"}], "-", 
         RowBox[{"Poly\[Phi]", "[", "\[Lambda]", "]"}]}]}], "}"}], ")"}], "/.", 
     RowBox[{"\[Lambda]", "->", "\[Lambda]Test"}]}], ",", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "8"}]]}], "]"}], "]"}]}], "VerificationTest",
 CellChangeTimes->{{3.8831102815267687`*^9, 3.8831103299061537`*^9}, {
  3.883110383459427*^9, 3.883110383689026*^9}, {3.88311073202383*^9, 
  3.883110816806859*^9}, {3.883111068141037*^9, 3.883111105421492*^9}, {
  3.883111136158946*^9, 3.883111136685961*^9}, {3.883111172875813*^9, 
  3.8831112291193113`*^9}, {3.883111581010158*^9, 3.883111581773801*^9}, {
  3.883121609417039*^9, 3.883121681633728*^9}, {3.883121897594798*^9, 
  3.883121897883399*^9}},
 CellLabel->"In[20]:=",
 CellID->501336233,ExpressionUUID->"d18b7f57-6c0e-4dca-9c33-a543e80b7760"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.883110285501178*^9, 3.8831102875866213`*^9}},
 CellID->1379720850,ExpressionUUID->"4e675f5b-b890-4323-a82c-2fc1c177056a"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{71., {1., 13.}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{20., {5., 10.}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{41., {1., 9.}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"], {
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "TestID-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[\\\"None\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[\"None\", Function[Short[Slot[1], Rational[2, \
3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.\
009227999999999348`\\\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \
\\\"\\\\\\\"Seconds\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[TemplateBox[List[\"0.009227999999999348`\", \"\\\"s\\\
\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->1129362485,ExpressionUUID->"b8564b7c-277c-4f60-a0f7-795245b31a36"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    ImageSizeCache->{99., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache->{149., {8., 18.}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    ImageSizeCache->{84., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 ImageSizeCache->{134., {8., 18.}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"], {
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "MemoryConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["MemoryConstraint"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "SameTest-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["SameTest"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TestID-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TestID"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TimeConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TimeConstraint"]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{19., {5., 14.}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 ImageSizeCache->{40., {1., 10.}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{94., {8., 18.}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->1734813209,ExpressionUUID->"e5dc54d6-1a92-47d4-b373-a947a35227df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["With ICs", "Subsubsection",
 CellChangeTimes->{{3.8831115408957253`*^9, 3.883111559619073*^9}},
 CellID->1501199301,ExpressionUUID->"77b92942-1d0b-4dee-ba10-1b13b304003c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RP", " ", "=", " ", 
   RowBox[{"1", "+", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RM", " ", "=", " ", 
   RowBox[{"1", "-", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "15"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R1", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"KerrGeoPlunge", "[", 
      RowBox[{"a", ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}]}], "]"}], "[", 
     "\"\<RadialRoots\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"KerrGeoPlunge", "[", 
      RowBox[{"a", ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}]}], "]"}], "[", 
     "\"\<RadialRoots\>\"", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Z1", ",", "Z2"}], "}"}], " ", "=", 
   RowBox[{
    RowBox[{"KerrGeoPlunge", "[", 
     RowBox[{"a", ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}]}], "]"}], "[", 
    "\"\<PolarRoots\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t0", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1000"}], ",", "1000"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r0", " ", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"R1", ",", "R2"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]0", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ArcCos", "[", "Z1", "]"}], ",", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{"ArcCos", "[", "Z1", "]"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"\[Phi]0", "=", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1000"}], ",", "1000"}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"RI", ",", "R4"}], "}"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"KerrGeoPlunge", "[", 
       RowBox[{"a", ",", "\"\<ISSORadialParam\>\"", ",", "6"}], "]"}], "[", 
      "\"\<RadialRoots\>\"", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orbit", "=", 
   RowBox[{"KerrGeoPlunge", "[", 
    RowBox[{"a", ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t0", " ", ",", "r0", ",", "\[Theta]0", ",", " ", "\[Phi]0"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Z1", ",", "Z2"}], "}"}], "=", 
   RowBox[{"orbit", "[", "\"\<PolarRoots\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], " ", "=", 
   " ", 
   RowBox[{"orbit", "[", "\"\<Trajectory\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<\[ScriptCapitalE]\>\"", ",", "\"\<\[ScriptCapitalL]\>\"", " ", ",", 
      "\"\<\[ScriptCapitalQ]\>\""}], "}"}], "/.", 
    RowBox[{"orbit", "[", "\"\<ConstantsOfMotion\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"z", "[", "\[Lambda]_", "]"}], ":=", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Re", "[", 
  RowBox[{"Round", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"t", "'"}], "[", "\[Lambda]", "]"}], " ", "-", " ", 
         RowBox[{"TPoly", "[", "\[Lambda]", "]"}]}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r", "'"}], "[", "\[Lambda]", "]"}], ")"}], "2"], "-", 
         RowBox[{"RPoly", "[", "\[Lambda]", "]"}]}], " ", ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], 
            RowBox[{
             RowBox[{"\[Theta]", "'"}], "[", "\[Lambda]", "]"}]}], ")"}], 
          "2"], "-", " ", 
         RowBox[{"Poly\[Theta]", "[", "\[Lambda]", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Phi]", "'"}], "[", "\[Lambda]", "]"}], "-", 
         RowBox[{"Poly\[Phi]", "[", "\[Lambda]", "]"}]}]}], "}"}], ")"}], "/.", 
     RowBox[{"\[Lambda]", "->", "\[Lambda]Test"}]}], ",", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "10"}]]}], "]"}], "]"}]}], "VerificationTest",
 CellChangeTimes->{{3.8831102815267687`*^9, 3.8831103299061537`*^9}, {
  3.883110383459427*^9, 3.883110383689026*^9}, {3.88311073202383*^9, 
  3.883110816806859*^9}, {3.883111068141037*^9, 3.883111105421492*^9}, {
  3.883111136158946*^9, 3.883111136685961*^9}, {3.883111172875813*^9, 
  3.8831112291193113`*^9}, {3.8831115868144608`*^9, 3.883111590124835*^9}, {
  3.8831294348870783`*^9, 3.8831294525725603`*^9}, {3.88312951518799*^9, 
  3.883129518791506*^9}, {3.883129568377172*^9, 3.883129597388163*^9}, {
  3.8831298103586903`*^9, 3.8831298198608427`*^9}},
 CellLabel->"In[21]:=",
 CellID->2098091176,ExpressionUUID->"764d16a4-277c-40f7-b1ba-c00362c0e798"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "ExpectedOutput",
 CellChangeTimes->{{3.883110285501178*^9, 3.8831102875866213`*^9}},
 CellID->936911292,ExpressionUUID->"c02834fd-7c44-4f21-a26a-55095facedfe"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Success-TestSuccess"],
            ImageSizeCache->{71., {1., 13.}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "SuccessCheck"],
           ImageSizeCache->{20., {5., 10.}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             ImageSizeCache->{41., {1., 9.}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"], {
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "TestID-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[\\\"None\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[\"None\", Function[Short[Slot[1], Rational[2, \
3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ActualOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "ExpectedOutput-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[RowBox[{\"{\", RowBox[{\"0\", \",\", \"0\", \",\", \
\"0\", \",\", \"0\"}], \"}\"}], Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}], 
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]],
            StripOnInput->False,
            LineColor->RGBColor[0.458824, 0.458824, 0.458824],
            FrontFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            BackFaceColor->RGBColor[0.458824, 0.458824, 0.458824],
            GraphicsColor->RGBColor[0.458824, 0.458824, 0.458824],
            FontColor->RGBColor[0.458824, 0.458824, 0.458824]], 
           
           StyleBox["\<\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.\
021391999999999634`\\\", \\\"\\\\\\\"s\\\\\\\"\\\", \\\"s\\\", \
\\\"\\\\\\\"Seconds\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0.14902, 0.14902, 0.14902],
            FrontFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            BackFaceColor->RGBColor[0.14902, 0.14902, 0.14902],
            GraphicsColor->RGBColor[0.14902, 0.14902, 0.14902],
            FontColor->RGBColor[0.14902, 0.14902, 0.14902]]}
         },
         AutoDelete->False,
         BaseStyle->{FontFamily -> "Helvetica", FontWeight -> "Bold"},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}],
        "Grid"]:>Grid[{{
          Style[
           Dynamic[
            RawBoxes[
             FEPrivate`FrontEndResource[
             "MUnitStrings", "CPUTimeUsed-Detail"]]], 
           RGBColor[0.458824, 0.458824, 0.458824]], 
          Style[
          "\!\(\*TagBox[TemplateBox[List[\"0.021391999999999634`\", \"\\\"s\\\
\"\", \"s\", \"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", 
           RGBColor[0.14902, 0.14902, 0.14902]]}}, 
        BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
        Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestSuccess",
 CellID->1577637086,ExpressionUUID->"e1d28a21-1c39-41f1-9a17-872e61195d80"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    ImageSizeCache->{99., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache->{149., {8., 18.}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    ImageSizeCache->{15., {3., 12.}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    ImageSizeCache->{84., {3., 11.}}], "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 ImageSizeCache->{134., {8., 18.}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"], {
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "MemoryConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["MemoryConstraint"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "SameTest-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["SameTest"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TestID-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TestID"]], 
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "TimeConstraint-Label"]]:>
                Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`InsertOptionRule["TimeConstraint"]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 ImageSizeCache->{19., {5., 14.}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 ImageSizeCache->{40., {1., 10.}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{94., {8., 18.}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->365914893,ExpressionUUID->"aa639916-eec3-4356-a6a5-330475887eb6"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Explicit Plotting", "Section",
 CellChangeTimes->{{3.8831210654188337`*^9, 3.883121071875628*^9}},
 CellID->282811579,ExpressionUUID->"fa33509c-856b-44f3-b0dd-bd9b7101531c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RP", " ", "=", " ", 
   RowBox[{"1", "+", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RM", " ", "=", " ", 
   RowBox[{"1", "-", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["a", "2"]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "15"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", " ", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orbit", " ", "=", " ", 
   RowBox[{"KerrGeoPlunge", "[", 
    RowBox[{"a", ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Z1", ",", "Z2"}], "}"}], "=", 
   RowBox[{"orbit", "[", "\"\<PolarRoots\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], " ", "=", 
   " ", 
   RowBox[{"orbit", "[", "\"\<Trajectory\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Epsilon]", ",", "L", ",", "Q"}], "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<\[ScriptCapitalE]\>\"", ",", "\"\<\[ScriptCapitalL]\>\"", " ", ",", 
     "\"\<\[ScriptCapitalQ]\>\""}], "}"}], "/.", 
   RowBox[{
   "orbit", "[", "\"\<ConstantsOfMotion\>\"", 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "[", "\[Lambda]_", "]"}], ":=", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Re", "[", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"t", "'"}], "[", "\[Lambda]", "]"}], " ", "-", " ", 
          RowBox[{"TPoly", "[", "\[Lambda]", "]"}]}], ",", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", "'"}], "[", "\[Lambda]", "]"}], ")"}], "2"], "-", 
          RowBox[{"RPoly", "[", "\[Lambda]", "]"}]}], " ", ",", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], 
             RowBox[{
              RowBox[{"\[Theta]", "'"}], "[", "\[Lambda]", "]"}]}], ")"}], 
           "2"], "-", " ", 
          RowBox[{"Poly\[Theta]", "[", "\[Lambda]", "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]", "'"}], "[", "\[Lambda]", "]"}], "-", 
          RowBox[{"Poly\[Phi]", "[", "\[Lambda]", "]"}]}]}], "}"}], ")"}], "/.", 
      RowBox[{"\[Lambda]", "->", "\[Lambda]Test"}]}], ",", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "8"}]]}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"t", "[", "\[Lambda]", "]"}], "]"}], ",", 
     RowBox[{"Re", "[", " ", 
      RowBox[{"r", "[", "\[Lambda]", "]"}], "]"}], ",", 
     RowBox[{"Re", "[", " ", 
      RowBox[{"\[Phi]", "[", "\[Lambda]", "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"RPoly", "[", "\[Lambda]", "]"}], "]"}], ",", " ", 
        RowBox[{"Re", "[", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r", "'"}], "[", "\[Lambda]", "]"}], ")"}], "2"], "]"}], 
        ",", 
        RowBox[{"Re", "[", " ", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", "'"}], "[", "\[Lambda]", "]"}], ")"}], "2"], "-", 
          " ", 
          RowBox[{"RPoly", "[", "\[Lambda]", "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"RP1", ",", "RPrime", ",", "Diff"}], "}"}]}], ",", "  ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.000000001"}], ",", "0.000000001"}], "}"}]}], 
        "}"}]}]}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"z", "'"}], "[", "\[Lambda]", "]"}], ")"}], "2"], ",", " ", 
        RowBox[{"Poly\[Theta]", "[", "\[Lambda]", "]"}], ",", " ", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"z", "'"}], "[", "\[Lambda]", "]"}], ")"}], "2"], "-", 
         " ", 
         RowBox[{"Poly\[Theta]", "[", "\[Lambda]", "]"}]}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", " ", 
      RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], " ", ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Poly\[Theta]Q", ",", "\[Theta]Q", ",", 
         RowBox[{"\[Theta]Q", "-", "Poly\[Theta]Q"}]}], "}"}]}], ",", "  ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.0000000001"}], ",", "0.0000000001"}], "}"}]}], 
        "}"}]}]}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"Poly\[Phi]", "[", "\[Lambda]", "]"}], "]"}], ",", 
        RowBox[{"Re", "[", 
         RowBox[{
          RowBox[{"\[Phi]", "'"}], "[", "\[Lambda]", "]"}], "]"}], ",", 
        RowBox[{"Re", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]", "'"}], "[", "\[Lambda]", "]"}], "-", 
          RowBox[{"Poly\[Phi]", "[", "\[Lambda]", "]"}]}], "]"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Poly\[Phi]", ",", "\[Phi]Prime", ",", 
         RowBox[{"\[Phi]Prime", "-", "Poly\[Phi]"}]}], "}"}]}], ",", "  ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.000000001"}], ",", "0.000000001"}], "}"}]}], 
        "}"}]}]}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{
          RowBox[{"t", "'"}], "[", "\[Lambda]", "]"}], "]"}], ",", 
        RowBox[{"Re", "[", " ", 
         RowBox[{"TPoly", "[", "\[Lambda]", "]"}], " ", "]"}], ",", " ", 
        RowBox[{"Re", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"t", "'"}], "[", "\[Lambda]", "]"}], "-", " ", 
          RowBox[{"TPoly", "[", "\[Lambda]", "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"TPRIME", ",", "TPLOY", ",", "Diff"}], "}"}]}], ",", "  ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.000000001"}], ",", "0.000000001"}], "}"}]}], 
        "}"}]}]}], "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.883120987114633*^9, 3.8831210241844683`*^9, {3.883121740673387*^9, 
   3.8831217444192257`*^9}, {3.8831218618475113`*^9, 3.883121866538566*^9}, {
   3.8831219033603563`*^9, 3.883121988444625*^9}, {3.8831220266548986`*^9, 
   3.8831220429645967`*^9}, {3.883129782513146*^9, 3.8831297854174128`*^9}},
 CellLabel->"In[22]:=",
 CellID->1131360723,ExpressionUUID->"90ff0fe7-9471-45ec-bb14-73e345ea140f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.37754858477807507`", ",", "10.997404788429428`", ",", 
   "8.227503491048232`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.883121074616188*^9, 3.883121693771613*^9, 3.8831217470291023`*^9, 
   3.8831217874637136`*^9, 3.883121825789338*^9, 3.8831218682508802`*^9, {
   3.883121917696905*^9, 3.883122063403864*^9}, {3.8831221967777042`*^9, 
   3.883122214689714*^9}, 3.883129366006439*^9, {3.883129773280347*^9, 
   3.88312978632786*^9}, 3.883129928829064*^9, 3.883130288349908*^9},
 CellLabel->"Out[32]=",
 CellID->1334072909,ExpressionUUID->"8092d156-22b3-4819-8346-59edf46a5745"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
PPwPLuHFVA==
          "]]}, Annotation[#, "Charting`Private`Tag$21576#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
MnpCm/wlgBZ5nnj1LmSeDCOMrA0LYbToZEpB/Vt+CgiKFoZdjaVFtcSe3+NX
KGCs/twiMYkWjX2wu5xnTYHYZ0cU6H7Tooe3z4kv+1Ng9Es7y4M/tIjD4K7n
m0zs+sz3vYUFtOj8n/f4e40UeNh59gdvGS2qtLtFeDlKgbjNmVf2NbToQHud
ZeMqBcYPhl/paKJFX5bsIwww/h1V1Dh4upMWOTUXFgpgfDQxpJrx6aNFtCLO
77mxviHOJSN3doQW5Qfh1eXosD4g1sRTdZoWOet/ZvIhU0C4kkc7bhFb3yUT
rX3LFDCdqjlOvU6LhpXP6XUOUiCB2XHTYIcWtX8V3WyrocCUmER1PjUdYlPQ
+rLvF+afGkOB+5nokCx9jEgC1hc9sfpq+pKDDrF28d/5bI75pd8F2VZuOuTc
Y3FuQJkC01nr9JJ8dEjOtOhdBDd2fXdip9cROmQpJmo8NEoGs22d+KnjdCjY
3sgjM5UMP/jYbC9K0qHj/7Vxi9uQYVap6GLMGTokEnk7Vl+aDObvBMd1lelQ
plMSiwLWZ/6I68jMUaVDb3FyqzyGOzBX5eHGrUGHvHT2DzNw7oAl65xgky4d
ik7IYvPBPGDuVT4d6wM61NIqkSvCTgLz6Y+Tqo/p0MkHdvHm6dvwuFLkR+kL
OnR378bXu8tbYPzW9PQfbzo0MvTn39lrmzCyIMO16keH3F+O3HvctwH39enX
JUPokOnDN0HnzTbA8FxcblI8HfIwUIp64bwOOmsjEF5EhzQdvrLRfluDngfp
R/5V0KEngY9a7LjX4G6LCy1PPR0yO9f+vsh/FW7/PFz9uZsO8ed8cXnstwKa
jw003Jbp0ClPX81NtiW43Nejby5Ij8538M5+mJmEyitJ5xNF6NELX40yzXnM
P3PtBcYl6RG9rOXd3JVxUA7gGTdQoEdfmVm8v9GPgeKN2xZat+nR0cXcQ0cz
B6GgUOi6ry49+hFuHdu32g/y4muS9ffp0fi20NY9xT44y+y3evEpPSpT4vyW
vtgNUuXNr+Q86FHzw+XwrMFWSD8dpWfrTY/2TzXes3ndAqeinyll+NGj64cv
xb9TbQKJN+zU4lH0yOLXUrKxci2kzvWPPomnRwKTCnkSs1UgqptaEZ+Crd/g
doN4egWInL3meTiXHl1UYj5sF14CifG85vpF9GhfaHsylXshCHPPXgupoEf/
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
GIS5P2IDZow=
          "]]}, Annotation[#, "Charting`Private`Tag$21576#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUl3c8le8fxs1jH2dIQiVKRfaexzgc5xiJjEpGRoUk35JoiiKjJdpDkkLT
qKjnkhKSiGSnRJpK9vw9v7+83q/7eZ77+lyf63Pfx5JN292CBfj4+KbE+fj+
/3ffV+ehuTkmbq0QQJWRE/rjZEc6pplIL3If5Zg4wYX2cax0ggklfmdqqqkT
SnNuTp4eZcJny+Cai2ZOUDKJnNn+j4l9d++UHTR3QtIbYz6nP0y4fWBbWlk4
4W8Av+CKX0xMr46Y7iF5/WiNsNB3JmQmRHZtsXTC82OnRHv6mdijVJrbQbL6
4g0S5b1MLNoXqMFiOSHjoQr1bA8Tx431N2SRHNxZxHRtZ2JMskjI0MoJ9ZH7
ZFd9YKJzv0xEAsmGwvYLRJuZ2CYotv8DyVfOURW/NDAReP6RhZ61E0Q1PyzC
GyaCs3O6L5C84/mVJRdrmRjppL6dZ+OEds8tS2NeMaEXONhwg2SbH9rL175g
wvLJOZk1tk7IPzCxUruCiYI/B70Xsp0gI/N8leQzJrZsE6DR7ZywN++Y1sAT
JvicGk7r2Tuhz9xd90UpE0cSL/qlcUg/GxUMrhYxERtpuGkFl/Qz+IvR3vtM
TMiUbKY5kn5OFph632Hi1dolt9ydST/Td1no5zMRVrzitKAr6aeypRUtj4nP
rKmPBu6kn6UU2585TLx8bKZL8SL9dHxrV32NicHFHw6c3UD62ZPlkHOZCYeS
N22KAaSfO/0dD15goufD6IX3m50wI7rSxecsE2WPNyxRjnRCyKW/rsZnmIje
duD6qVjSX50n7jKnmLhxuKyQluQEo6p4zz/ppN6pg6fMzzvh6nrHdXUpTOwI
WTK6o4j0d5Dpk5fERLfr7eQ7H0l/D3f6JiQy8e6tUdlPnjPa598I8I9nIrKO
sUd8iTNsC7YFmR9gonihjGVjpRMKrAw3y+1lIv685qWuU6S/72e3Dscwkcsv
nKRO6tu39VV4wy4mFpgbJWesJfM6c3x7QRQTLbUVoeZkvlxOeUclbWeCuYWi
9nAF6a/qkl1B4UywWRPLl8mS/pZ92221lYn1OpkaUsJOSF79IFYxhIm9DOE8
+ogjhnpj941vYiKhPcfgX58jKiUlD9/zYUL2WMGpSzWOCPHVTFdyZcJjUe3b
hDOOqB8aPTHtxESvqbCRYLIjjI4Sp1u5TLT5PWk6t9cRovdcz52wZWKxUKRM
d6Aj8vn/y+EzYsI07UdNoI4jjN1vU87pMTFUlt+rqOKIqpxPW3S0mThlbJC7
RcYR7qNyr2tWMfEjfL77cmFH9HBcNTatZOLXztwU7REeIs4dPT65jImS3bYK
q7/wMPX92d9TykzcNKyUNH3HQ5L5qLv6Yiak9PLOJD3jQTZdo6RSgYmoMob7
hTwecj4GyfnIMfEiRX0k/DgPOjoXY4dlmNg0S4lYsoOHZ/FNnal0JhQtXu8q
4/Lg1CzOWkYl+6d+QSBfiof2ZTbXnoozYdzTwfsWwsXm3XsEPUWYEJZTds3q
5mK4+l7wb0Eyv245FV1LeIiXH3h1hI+JuYTeQBM2D7TwxWqLZxgQjsi3ilnP
w6WnnqmlEwzUJR85ExTKg5p0+u/VowxU5n/yi4rm4ZH/S9eBIQbuh4hpfz3A
g92D6QcHBxnY6dHafOgoD+8E9ect+MnA0ZcuvWVpPPh7hO2+P8CAwW6Nx19P
8fArN7uN28eA0cChD6wsHmLH28w+f2LAbi4zdPA8D6I8+uXYbgYCOxje8y/z
cOaCAx+zg4GPolUhjVd5UP51YFP+Bwb8VTY6617n4Z5l6QvbZgaG6/jnO97g
weLEb9XOBgbG3potVLvJQ+2nZck73zBwVe59eQfpt7fexh+StQzEzOh1hd7m
oT8hw/lGFQOpAa7rPuXz8F/L67sWlQzQ/vy31qGQh/Q9pjsjyhmoVt4SLH6P
B4XXO1oojxmQt9p/PPo+D3mKt4yvFDNwjfKvY+QBD4YRPeeNHjAgTncrOlnE
QyUxf+btHQYYGsd91pbw4Epf7bcln4Hta7av5j7ioXvTkQq+PAYK79If7nvC
Q1jRU5VzOQx0Fl38y/eUh3HhkUSdawy0n7FM6iN4OOK1aqDmEgOSrGUrbSp5
YN4K5G06z8DoKk8/vVc8XJ08XzCZycDzDUlC3a950HR6Rz19moFJyhm5/xp5
KL8ktkP9BAPhtufEDVt54A5aNVWmkn68uX3haA8PLVYxBj7JDCh5rVs4+Z2H
oFN3s4YTGVi/5GVl7DiPnM/+idR4BuKSQw/dF3fEAYNFPssOMMD/+OOs1DJH
SB71ePY0jgGd5TfNOlwdcb41VckzhoGS0t3r4uGIFWov4n/vZCBX5MzFiRRH
FMdNfTmyg4ELYkbT49qOsHmjy1kcwYDvqnNPVvM5omFR6K3SUAaWV4X1p3Xx
sDHymoTrZgYcw0uKnlfw8L2iddtAIANO0QuNlpD9jGHSGg76M9C25iGXdYYH
4WCO7oKNDMjMO9jvGE/m01fH68c6Bu7sjDHqJefrsrfC3qeeDBQsLZ8O30T2
z2nwZYArA4l9W/efsOMhRC9r3W1bBlZvZ808ovGgq3Fo/14rBnY33y2lCvEw
qxp23cWC9EMn8fK+MS6y5Fm/hgzJ9Sk32n/k/FXzfz1opkZ+/76EtVs+FxlT
DTekljOwrfPY0plLXPiPPKn9qMKAVdLtNt4JLiYG0mUSFjLgDJ0DIf9xUfU5
xsRTnoGGBKVvvwO5ONW5yXfFfAYkusV2JLlz4dvidHiSSfpr02n905oLtQbD
vDoaA9FxESVFmlyM1ii9uSzFQPMi0xzOAi6eV4oPRYozkHX8T/otPi7Snw7L
2oowUM44SJXpdcCG0m6zeUIM6P8e+/ay3AEr7lf7f+VjIPMuNUPjsAOGbz9I
fDxDx5j03Z7YIQ6Qc/F2yiQdC+zKt5tyHJB6+cjbjWN0UB8Kp1kcd4D32chh
rWE6ag/9KJh44IClp9YvEPhLB6fC4emXGgf8SWFbNv+iIyZp4TzDdgc8TdQM
zP1Oh2vgzrH4fgccOyCXFPOVDtp/OiGL/jjAc49AIe8LHacKXyS9GXOA8n8/
GxU/0WFNUzaSmnXA7/CW0d9ddFw33XlUR5CLJyFQqGinQ/i2d8suES6O+N+2
Ov2B3G/uZLawBBdu6zOCg5vp+JouUMVP5WLx2v3HjBrp+F39++FhGhc/nbfc
FaunY4WY2OkrDC4ecdyaO2rpYOg05wbLcJFgbT5R+IoOPvtf3N55XLiaqS46
+IKOcrUFV1Xmc6FoQLN1q6BD34FfTluOiwHNyc1Ln9Hhv775NY3sR9GKL6mj
T+gouEbU1pF8SLn+fnUpHXcr/6wJlefCRfFRy/kiOjLjyiZ+kywvmz0Vfp+O
4mLldj8FLvqlU5VYd+hIMl10q4LkB2LRdvR8Osx2bmiWU+Riv6B/aO9NOo53
vs3aSjJvhnu8OIcOj0xNxiOSZcf0io5eo0OnV9VbdCEXn/8sbFt3mQ5uqfFR
X5LvfBeZVb9A9nP/l9ZnJMd++as8m0WHiaZAqcYiLuy7OzgNGXQoDym/u0sy
s/VlePZJOhR7xc14i7mA+rWkhHQ6JJL/HZ8lOfzA3pyQFDr2Rp8Pe6/ExYIm
Lzgkkf1xDPR7v4TMu6pep1oiHQdfvP0prMLFf7HUccl48vtln15uX8qFUv03
5uB+OnaGyS1ZqMrFmyUvtRrjyHz56qyUX0Hq23XV8WEMHUVrpjJ2qXGxvCZu
85lddKSuWh1rrcFFs6LX4d1RdAzr3onN0Cb9jtS9sm47mRc/vr0p+lxovpAq
MwunY6hvJ9vJhIuO+d9aFm6lQ8W8LlOMxUVS2IuhuWA6JqTEpsXsuTAgrlA/
b6KDFa2W89CF9I8Rp/bCj8yXbuDL7HVcHA/xtM/1oSN8WZl462YuzJ/obEpa
R4f0ssRu1TguvklJ7Q/1JPMr3HI6OouLzICBc07uZD/aMvdOv+LCtriyWNOV
zMef7N2PNvDwR/RKI82ZjtKtJ+8z+rm45BP7a4hLh+W/uu05mWR/73mIvben
Y4OnD9NkKxdjgjrLSm3pKPHeW7HCgYscL0nrc1Z0BKv/vJ1A+rEm/6tPnAUd
LqmTE3WyXMzOPo/ZaEpHhfTdmhIBLvLdLmewjOjoF7biHiTnzzt3z70l+nQw
qZbdhR8d8MBZe6BPg+xnTtLtGTjA75qEULUamY+yr1dLyXmXHOlffHs5mf+a
CwFjOQ4IuXjJK2IJHYc/pK+4dswB8j/EX43K0DGT1yJw2dsB8Ul9N0SmaVBO
u9+d+I8DrU5UfBunARSniDt9HHRqXex6PUKDrcKtDw4fOEg+vHuicIiG9Cep
77WqOTD84DbvxCANJzN3u+s+4qBXTVMn6icNuixitdRNDk7sF3Ne+42GJKud
rgEZHFi8+7LFsJ8Gzeorny4f4OD7MiTI9dIgk2Ur/HEzB1l7Llyd/EjDyqeb
jJMcOWC/iS7v7KTB7+T4abflHPxVcmt91kZD0beqzPQhe1zeqTF8tYXUV+Bj
lnrIHo7VorTDTTTYO6lJW2TaY1zhi3pwAw2rP4aniP+0x43tBIfzhgbtoINJ
fkwO3CrPB66spSFuc/WG+as4WNr8pftVFQ3H7/p2v7fkYPSL5vqQShquPHvu
fseJg+qRmPdCoCHzgb66nxcH5yiVrtfLaajSOV330Y+D0PlSddaPyed1dJpe
hXBgvsKL01NMg/+/ZP64cA6oJtee739Aw2TP/POWOzjo4f6wWHiXBp9lNVXs
XRw8WG/wuCyfhjAPLdWHMRwcDjugvz6PhjRzy+rcOA7W7q25O55DA2Pd/ceG
+zlQTWOqZ12joWb8fdGugxyMX9qYa3CZho2TBx3/i+eg9s7NJc3naRgYkigz
T+DgIvH3YlQWDX/5mUldiRxsazCTo2fQML4Lw35HObD8lHj67gkaiBYB3zdJ
HNCG3lJd0miYi12RpHmMgyJmkHDKERpy83jlv1I5OLL0zsGVh2mYp7Yx3Sed
Ay+D8alXB2gwcRde+ek4ByvsbXaH7KWh3jp+NuEkB5OeqUNCe8h8NWRsdzvN
Qd3mlm3Xd5F5svqt5nGGg8sxSt+so0i9DvW557M4iEwODeqJoMGyurRC9zwH
1ueLPu4Po+HR+r+XtC9xwMifXb9wCw1OHfIf8q9y8KXMoaUsiIao3fvsnudw
UFJ3as36ABpGRZh5529xkNTVWTe+kQaBpw4tW+5ysP63qkPWehpeDRve2VnC
waq5yEoDLxpEdieYqhIczEqXWTa705A89Pm6Yi0Hb5WEn0S5kvWmMPl8Wzm4
qrPagO5Mg9TFb2k1PziIsjl37y6X7KflRPJmUQew3XvVXexpmP0yKjVl4gDZ
II2bP21oCNh5O36SvH8Hdu5WTmHRYFNv51zm6oDHiRWXVprToFW4UcRDkLyP
MyUWVBvTcDvk0HV2Cwc+Nz0yQgxouENhJWkVc6D56Iq0sC45P3UrZXxJf/hq
vh27rklDfOFMYMBhDt616VFs1GnIcjXxH4ng4Pr3fYd6ltPwmNXmtcGHg51T
r6b3LyXzuU5NawE5b/aSjJiFS8j5eBh3tcOUnE+N3Ij18qS+DtPcdEUOtHfU
b2iWpIEjaVcw+MUeAvFyH6LEaAgN9l6b8sEezac2udEpNLRtnW02rrXH7y2/
Tl6clUZ8dr1v6l17xA1ahJ/olYa44JltrjH2uBhgNGDVJY37seXqeaH2KG/S
DvrbIg26d2brUR97dNmp9VxrkAZl5tOFBmd7zJaq+LjVSqOpo+/Lekt7LFZb
2CrwQhoZrNVWQxr2sLoou/bhU/J5v797XRTtEUClNQSWSuPFj6G7ImL2iD8o
5iRzXxr/eguyD/yzw/UhgeoXt6Uxm7L6z4N2O7wImrbdlSMN74R1MTXlduhr
GSGWXZaGwqf5pxrO2IHCHTRryZJGduTqhOD1dlheNlB65KQ0fvablqo8YsNB
47OeUQqpR/POnmMr7bD1SsfdrwnS0AyqyXu0zQ7H6O/Vz+6Xxoc7T1QiTtgh
/3D9TYcYaayZi4vvzbVD3cgrlYkd0vCounxyuMQOvzZXXLkVRtb7suqCfKUd
qO1PFNYHS2Pob5PRpTo7aDkVZYn7SeNzvrWwebMdXJ8VMsu8Sf+SatsjyXp2
aN88HuYmDdpstmj6Rzucyr4qoegkjcULpOvf9Nrhocz5o3V20rBXsfi1/qsd
mo+cFtzHkkaXtMYzj+92GBlPPaBhIo1bLbu8Pvy0g2zYkakuXWncKUi58O+3
HYy6DuxOXyWN6AD980/+2MF79Z5/lqrSqNv4MNFkyA57KqK2Dy6WhsOCbQFx
pN/n9cJ/XFkgjWR+7qHkYTuU3Qje7MqUxgGLGwNhI3bonO/XyycljWcLMk6t
HLXDTLK3332KNPa8+HmrmuRF02s6Avik0dd3r9hlzA6sCEcvxiQVEbIj5SDZ
v4fd9PwfFeFXzgapjNvhkJvl6v9+UfGVd0g0juTsF0avVb5ScbfgVuNrkisN
dTjNPVRkDEvULpiww5c8tcqEdioW/McZ3EKysMJSlkEzFZTyl+ynJKumLSzr
e0NFf7J8v/ykHThzskaZr6gImt4of4TkLTtoD+0ryP2oa7cKTtkhqVdMa+wJ
FSJXvB9mkXzLQzD/ZhEVy6qtnR2m7VD7alrV+w4VXg+fL1GYscN3k9Fs0Twq
epV82mVn7SBRMLjo8TVS38HbDNs5O6xa9O381gtUxL0WOp/HZw/nE59l5c9Q
YXFAvmaNgD0iBDpP1aZTkT71+x9PyB7Hd76nxiVRccOnReg6xR73+uuPqcdT
sURx3tpwch4avaspnXFUeCqe7ngqaY+h2or41F1UrDnzerKIZg+mRdms+XYq
5K8qLYuZZw/9u0Wxv7ZQcWIpbZGZgj08ltwZvbSJiunxkBk7ZXtEn74Z5eJD
RZHiysP86vbIEr72e9aDilgwt1MN7fFo9/nQu6upiL5KcYxm20M5aMeNVgcq
vIv5pBaut0eaq0MPvw0VOSKPKOlx5P1tvlhB3YyKrKSOkg3l9ti0ctRjrT4V
708239PhkffHvDcn9mlQ0dZ66PDl0/YwFMh5natKxfZkmS5JT3tc/R1LaVhM
Je+31RZj5Pkg0bHGekKO7L9/9zoTaVLvqxV7lRlUJD18r1hE5q/n4VyJowQV
3eonEg+Q88K72vJ3pxAVW409R068tkNRauGqyzNScBsgVts/JvO4J2Hzq1Ep
nOKTtjTIs0Ny8IbsP4NS8Gmd/MA8awdfSzE5289S4Monvnq/xw7Vaj1u4R1S
iGQVWkeG2UF3fmnamWYpHF6wNS9gox1E/gQJDlRJQdMvOGzY2g73ruF3ar4U
KmyKa0Yk7CCfnrWyJEcKuR8m5Oxn2UiMjQj6eEkKu717C/3/sLHeXbFd54QU
jk+H3rrcxMYL1j+ZDclS2LX03unUF2xorqpdnRAvBQGxss/vi9gQFI552bJT
Cqx8q7rbp9iI+OvCxxchBUhuHT5/gI3WrmVmKzdLoTWDtyQjlA2b2uldbv5S
KCCGjhBubBSUNN2LWycFr+WC7bmGbMhev/0jx00Ktm40X18mG4eOH1Ktd5TC
mkf5J5I/2eJnnHfAGFsK0o7Z/gcO2cJzi9ZFJUspPPlrarUiwBZYS/nANZIC
44S/wsJqW6hZd9H/05bC0d2fvu4eskWGRpHTxZVSeB4+G2wmycbcgpSjL5VJ
fYrugYsWsRFK2fT8t4IU6qIqVULV2WgeMp6ZP08K8y6d0n9kwIblR2lja6oU
nEaKVg1asJH3uj8qVEQKgb3yXy+x2WA8elp4mk8K646tWKHCY2NfTsZA+YQk
6DvHVStc2Bg4EabSPyQJETGefB5Zv9s+G1/pn5J4O7jDY9qDjfKtC84Z90ni
q84ekXZvNlQ9/zQFdEviV1pPttcGNk7YvKKmfJDE589TMUc3sjGleZlb1CCJ
n49ut8T4sRGisCuhq0YSbhfoDcYBbDSIOBGUSknsMbT98G4TGzk9E/rriiUh
2PeC+zSYDeqbhu3xdyRhlSRJU9rMxp7HN2/n35TEhro/K+O3sOFyykNp9pwk
FN9tU9ocxkasrjSXc5p838P86HA4G7nvqnecSJWEdb0xkRPBxruo+PNtiZJ4
1Ti0OT6SjVmGeaXyAUmclf594lwUG2oPR36ExUiC/4us+fhONjzd78oU75DE
i2ya5N3dbMT/22IxGyqJsK4C/XexbBSeVg7hBJH+nfZpjN1P5kmvM/3ERknc
0Iroqo5nQ6j5TGmbpyQGRI4Y9h9lQ3vn6h5lV0m05qzcKpHOho+MmFg4VxJ5
6RNPj55hI6nouU6xjSTk70xeeHuZjaK1e9fPmkniuLup/9nbbPQMGxzmGEhC
TWf7epknbEieGcw/oSmJq7477ZLfsmFscKu5bTmpV+2EthY5L0HvN80oL5FE
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
50WLezMPNr8bw3tNFTHwQ3Ha0jc8zJPOXXRMoohV/wojfH/z0DP84cJ3P0VI
FRXvpC7gw0EzI+lxiCJG6rf5bDTj445AsKEgXBG+5IlN6dZ8ZGfm6jnuUUTq
08t9jA180O7Ykw32K2Kfzd6ugkg+oj7J9JDSFFHnV75d9gAffZzSux0ZxHyq
FXndST6czbzOXjutiHqrh0cYF/mo96fHpuQp4sMMC799d/hYcqjK07dYEVOP
T6HGtPOReyPEzPSKIj7TBX/mj/DBfK85VaVCESeOfmx+ybHAbtrDsc/Visg6
fO1gM9cCX5dGvbxXp4iWlf8ODO63gLvX3IpTjxRh27Jc+42tAI3724+FtypC
K/qjfvQeC6wo2xdh/UoRp/7af7K0sUDR62VrZrxTRHej2fK+BRZQJfca/fmo
iIh/9w0splog3jCD1TqgiMSd257L0i3wzVkwVPxdEZLSWQ4Gchbw3jPSFDeu
iPuUpklXxvhoLs696CqnhH+Up5R+on7zZ/YpRkpKWPr0gU3QAB8lf2WClVhK
mGmZbf+5nw/N2aXi7ilKqPaa57m8l48kO685N7WUYCyOdZr9no9fO+jy6bOU
YNi4wS2riw//vKoPG/SV4GD3lRr3ho/nj0JqeYuV8MyytPxuBx+CH5p56sZK
YFwznG73mo+y6Q/3DIPA8pyz017xoS2OWtcgUsKFve6HtV/ykbZlLvesrRKG
A+Y3rCL4nzjVPm2HoxIO6i23yXvBR0jdvnE7dyX4dTooqhD41cCy13PWK8HO
U+fkqTY+rNR6b8gEKUHmzivtJQQu52Ucbw9Tgm79HK3253zMChZsL92uhO+r
Ou3jCHz06Ijj/t1KeGJbk2VAYNnq3CXrEoj1Lo/3P3vGR9hHe86KFCU0H3yp
GE7gN8xJ3xhHlJDUEH5GlsBS49LmjyeUUKw4+e+uVj4q13tdvp2jhMt/UmTf
tvAx7yA9NbNICbPi00a1CHy8vCok9JIS7i2OsV72lA9KV4i16DpRr9HUbVOb
+YhQnDpv+i0lWHRrJ99v4qPH6KHCz7tK6Nx/unv+YyIf7lEfmxqU8NjAJcXk
IR81CXPrC5uVYKX/Kf3DAz4WXG7P3/1CCWed4odV6om8tO/b6/RGCVusPNiX
7xJ5kV3uY/hBCQbrnh48XM3Hje1yq3s/K8HZMyLs3A1Cz69PLLK/Edj10Zyi
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

          "]]}, Annotation[#, "Charting`Private`Tag$21576#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
2aUlKurfEVDodI0B/wN0yvYv
          "]]}, 
        Annotation[#, "Charting`Private`Tag$21576#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"Re", "(", 
         RowBox[{"t", "(", 
           TagBox["\[Lambda]", HoldForm], ")"}], ")"}], 
       RowBox[{"Re", "(", 
         RowBox[{"r", "(", 
           TagBox["\[Lambda]", HoldForm], ")"}], ")"}], 
       RowBox[{"Re", "(", 
         RowBox[{"\[Phi]", "(", 
           TagBox["\[Lambda]", HoldForm], ")"}], ")"}], 
       RowBox[{"Re", "(", 
         RowBox[{"\[Theta]", "(", 
           TagBox["\[Lambda]", HoldForm], ")"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.883121074616188*^9, 3.883121693771613*^9, 3.8831217470291023`*^9, 
   3.8831217874637136`*^9, 3.883121825789338*^9, 3.8831218682508802`*^9, {
   3.883121917696905*^9, 3.883122063403864*^9}, {3.8831221967777042`*^9, 
   3.883122214689714*^9}, 3.883129366006439*^9, {3.883129773280347*^9, 
   3.88312978632786*^9}, 3.883129928829064*^9, 3.883130291036037*^9},
 CellLabel->"Out[35]=",
 CellID->2034106883,ExpressionUUID->"cb79905b-76ae-4d75-b7e9-59fc87ce7c85"]
}, Open  ]]
}, Closed]]
},
WindowSize->{2648, 975},
WindowMargins->{{Automatic, 1569}, {230, Automatic}},
WindowTitle->"PlungesTest.nb",
DockedCells->{
  Cell[
   BoxData[
    PanelBox[
     PaneBox[
      TagBox[
       GridBox[{{
          StyleBox[
           DynamicBox[
            FEPrivate`FrontEndResource[
            "MUnitStrings", "TestingNotebook-Title"], 
            ImageSizeCache -> {100., {3., 9.}}], StripOnInput -> False, 
           FontSize -> 12, FontColor -> GrayLevel[0.4]], "\[SpanFromLeft]", 
          "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
          "\[SpanFromLeft]"}, {
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitExpressions", "New"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "New-Label"], 
                    ImageSizeCache -> {26., {0., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}], "Grid"], 
                ImageMargins -> {{0, 0}, {2, 0}}], Appearance -> 
               FEPrivate`FrontEndResource[
                "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
               Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`PaletteInsertTest[
                   InputNotebook[]]], Evaluator -> Automatic, 
               FrameMargins -> {{10, 10}, {0, 0}}, 
               ImageSize -> {Automatic, 28}, Method -> "Queued"], 
              DynamicBox[
               FEPrivate`FrontEndResource["MUnitStrings", "New-Tooltip"]], 
              TooltipDelay -> 0.5], Annotation[#, 
              Dynamic[
               RawBoxes[
                FEPrivate`FrontEndResource["MUnitStrings", "New-Tooltip"]]], 
              "Tooltip"]& ], $CellContext`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache -> {68., {11., 17.}}], DynamicModuleValues :> {}], 
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ConvertSelection"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "ConvertSelectiontoTest-Label"], 
                    ImageSizeCache -> {99., {1., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}], "Grid"], 
                ImageMargins -> {{0, 0}, {2, 0}}], Appearance -> 
               FEPrivate`FrontEndResource[
                "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
               Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`buttonConvertCellGroup[
                   InputNotebook[]]], Evaluator -> Automatic, 
               FrameMargins -> {{10, 10}, {0, 0}}, 
               ImageSize -> {Automatic, 28}, Method -> "Queued"], 
              DynamicBox[
               FEPrivate`FrontEndResource[
               "MUnitStrings", "ConvertSelectiontoTest-Tooltip"]], 
              TooltipDelay -> 0.5], Annotation[#, 
              Dynamic[
               RawBoxes[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "ConvertSelectiontoTest-Tooltip"]]], 
              "Tooltip"]& ], $CellContext`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache -> {141., {11., 17.}}], 
           DynamicModuleValues :> {}], 
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitExpressions", "Run"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "Run-Label"], 
                    ImageSizeCache -> {22., {0., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.3}}, "Rows" -> {{Automatic}}}], "Grid"], 
                ImageMargins -> {{0, 0}, {2, 0}}], Appearance -> 
               FEPrivate`FrontEndResource[
                "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
               Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteRun[
                   InputNotebook[]]], Evaluator -> Automatic, 
               FrameMargins -> {{10, 10}, {0, 0}}, 
               ImageSize -> {Automatic, 28}, Method -> "Queued"], 
              DynamicBox[
               FEPrivate`FrontEndResource["MUnitStrings", "Run-Tooltip"]], 
              TooltipDelay -> 0.5], Annotation[#, 
              Dynamic[
               RawBoxes[
                FEPrivate`FrontEndResource["MUnitStrings", "Run-Tooltip"]]], 
              "Tooltip"]& ], $CellContext`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache -> {63., {11., 17.}}], DynamicModuleValues :> {}], 
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            ActionMenuBox[
             ButtonBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "More-Label"], 
                    ImageSizeCache -> {30., {0., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]], 
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Arrow-Hover"], 
                    ImageSizeCache -> {9., {2., 7.}}], False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Arrow-Off"], 
                    ImageSizeCache -> {9., {2., 7.}}]}, 
                    Dynamic[$CellContext`hover$$], 
                    BaselinePosition -> (Center -> Scaled[0.5])]}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{Automatic}}}], "Grid"], 
               ImageMargins -> {{0, 0}, {0, 0}}], Appearance -> 
              FEPrivate`FrontEndResource[
               "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> {},
               ContentPadding -> True, Evaluator -> None, 
              FrameMargins -> {{10, 10}, {0, 0}}, 
              ImageSize -> {Automatic, 28}, Method -> "Preemptive"], {TagBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "AssignTestIDs"]], 
                    BaselinePosition -> (Center -> Scaled[0.55])], 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AssignTestIDs-Label"]]}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"] :> 
              Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteAddTestIDs[
                  InputNotebook[]]], TagBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SaveAsDotwlt"]], 
                    BaselinePosition -> (Center -> Scaled[0.55])], 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "SaveAsDotwlt-Label"]]}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"] :> 
              Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteSaveAs[
                  InputNotebook[]]], TagBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitExpressions", "Help"]], 
                    BaselinePosition -> (Center -> Scaled[0.55])], 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "Help-Label"]]}}, AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"] :> 
              SystemOpen["paclet:tutorial/UsingTheTestingFramework"]}, 
             Appearance -> None, Method -> "Queued"], $CellContext`hover$$ = 
            CurrentValue["MouseOver"], ImageSizeCache -> {67., {10., 18.}}], 
           DynamicModuleValues :> {}], 
          ItemBox["\"\"", ItemSize -> Fit, StripOnInput -> False], 
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            TagBox[
             TooltipBox[
              PaneSelectorBox[{True -> ButtonBox[
                  TagBox[
                   GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ClearTestResults-on"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "ClearTestResults-Label"], 
                    ImageSizeCache -> {96., {1., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}], "Grid"], 
                  Appearance -> 
                  FEPrivate`FrontEndResource[
                   "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
                  Block[{$ContextPath}, Needs["MUnit`"]; 
                    MUnit`clearTestResults[]], Evaluator -> Automatic, 
                  FrameMargins -> {{10, 10}, {0, 0}}, 
                  ImageSize -> {Automatic, 28}, Method -> "Queued"], False -> 
                ButtonBox[
                  TagBox[
                   GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ClearTestResults-off"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "ClearTestResults-Label"], 
                    ImageSizeCache -> {96., {1., 9.}}], "ButtonText", 
                    StripOnInput -> False, LineColor -> GrayLevel[0.7], 
                    FrontFaceColor -> GrayLevel[0.7], BackFaceColor -> 
                    GrayLevel[0.7], GraphicsColor -> GrayLevel[0.7], 
                    FontColor -> GrayLevel[0.7]]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}], "Grid"], 
                  Appearance -> 
                  FEPrivate`FrontEndResource[
                   "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
                  Null, Enabled -> False, Evaluator -> Automatic, 
                  FrameMargins -> {{10, 10}, {0, 0}}, 
                  ImageSize -> {Automatic, 28}, Method -> "Queued"]}, 
               Dynamic[CurrentValue[
                  ButtonNotebook[], {TaggingRules, "$testsRun"}, False] === 
                True]], 
              DynamicBox[
               FEPrivate`FrontEndResource[
               "MUnitStrings", "ClearTestResults-Tooltip"]], TooltipDelay -> 
              0.5], Annotation[#, 
              Dynamic[
               RawBoxes[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "ClearTestResults-Tooltip"]]], 
              "Tooltip"]& ], $CellContext`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache -> {138., {10., 18.}}], 
           DynamicModuleValues :> {}]}}, AutoDelete -> False, 
        BaseStyle -> {
         "DialogStyle", Bold, FontColor -> 
          RGBColor[
           0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]},
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
        GridBoxDividers -> {"Columns" -> {{False}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1}}}], 
       "Grid"], ImageMargins -> {{5, 5}, {Automatic, Automatic}}], Appearance -> 
     FEPrivate`FrontEndResource["MUnitExpressions", "StaticToolbarNinePatch"],
      FrameMargins -> {{26, 12}, {8, 12}}, ImageMargins -> -1]], "DockedCell",
    CellFrameMargins -> 0, ShowCellTags -> False, CellTags -> 
   "MUnitStaticToolbar"], 
  Cell[
   BoxData[
    PaneBox[
     TagBox[
      GridBox[{{
         TagBox[
          GridBox[{{
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "MUnitStrings", "TotalTestsRun-Label"]], 11, 
              RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
             FrameBox[
              StyleBox["\"9\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              GrayLevel[0.55], FrameStyle -> GrayLevel[0.55], 
              FrameMargins -> {{8, 8}, {0, 0}}, StripOnInput -> False], 
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource["MUnitStrings", "Successes-Label"]],
               11, 
              RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
             FrameBox[
              StyleBox["\"9\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              RGBColor[0., 0.6, 0.], FrameStyle -> RGBColor[0., 0.6, 0.], 
              FrameMargins -> {{8, 8}, {0, 0}}, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitStrings", "Failures-Label"]], 11, 
                  RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["\"(\"", 8, StripOnInput -> False], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "WrongResults-Label"]], 10, StripOnInput -> 
                    False], 
                    StyleBox["\")\"", 8, StripOnInput -> False]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], 
                   RGBColor[0.521569, 0.521569, 0.521569], StripOnInput -> 
                   False], 
                  ImageMargins -> {{
                    Automatic, Automatic}, {-0.3, Automatic}}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "ColumnsIndexed" -> {2 -> 0.3}, "Rows" -> {{Automatic}}}], 
              "Grid"], 
             FrameBox[
              StyleBox["\"0\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              RGBColor[0.7, 0., 0], FrameStyle -> RGBColor[0.7, 0., 0], 
              FrameMargins -> {{8, 8}, {0, 0}}, StripOnInput -> False]}, {
            "\"\"", "\"\"", 
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource["MUnitStrings", "Errors-Label"]], 
              11, 
              RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
             FrameBox[
              StyleBox["\"0\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              RGBColor[0.945, 0.81, 0.314], FrameStyle -> 
              RGBColor[0.945, 0.81, 0.314], FrameMargins -> {{8, 8}, {0, 0}}, 
              StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitStrings", "Failures-Label"]], 11, 
                  RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["\"(\"", 8, StripOnInput -> False], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "Messages-Label"]], 10, StripOnInput -> 
                    False], 
                    StyleBox["\")\"", 8, StripOnInput -> False]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], 
                   RGBColor[0.521569, 0.521569, 0.521569], StripOnInput -> 
                   False], 
                  ImageMargins -> {{
                    Automatic, Automatic}, {-0.3, Automatic}}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "ColumnsIndexed" -> {2 -> 0.3}, "Rows" -> {{Automatic}}}], 
              "Grid"], 
             FrameBox[
              StyleBox["\"0\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              RGBColor[0.921569, 0.678431, 0.337255], FrameStyle -> 
              RGBColor[0.921569, 0.678431, 0.337255], 
              FrameMargins -> {{8, 8}, {0, 0}}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {
              2 -> 0.7, 3 -> 1.5, 4 -> 0.7, 5 -> 1.5, 6 -> 0.7}, 
             "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontSize -> 12}], "Grid"], 
         ItemBox["", ItemSize -> Fit, StripOnInput -> False], 
         DynamicModuleBox[{
          MUnit`Palette`Private`$barDisplayType$$ = "InSequence", 
           MUnit`Palette`Private`resultColorBar$$}, 
          TagBox[
           GridBox[{{
              DynamicBox[
               ToBoxes[
                
                MUnit`Palette`Private`resultColorBar$$[{348422811, 494541942, 
                 934882551, 749645323, 622226412, 2040226521, 22269357, 
                 1129362485, 1577637086}, {1, 2, 3, 4, 5, 6, 7, 8, 
                 9}, {}, {}, {}, 250, 12], StandardForm]], 
              ActionMenuBox[
               PaneSelectorBox[{False -> DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "Arrow-Off"]], True -> DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "Arrow-Hover"]]}, 
                Dynamic[
                 CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                FrameMargins -> 0], {DynamicBox[
                  ToBoxes[
                   (If[MUnit`Palette`Private`$barDisplayType$$ === "ByStatus", 
                    Grid[{{"\[Checkmark]", #}}], 
                    Grid[{{
                    Spacer[10], #}}]]& )[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "ByStatus-Label"]]]], StandardForm]] :> (
                 MUnit`Palette`Private`$barDisplayType$$ = "ByStatus"), 
                DynamicBox[
                  ToBoxes[
                   (If[
                   MUnit`Palette`Private`$barDisplayType$$ === "InSequence", 
                    Grid[{{"\[Checkmark]", #}}], 
                    Grid[{{
                    Spacer[10], #}}]]& )[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "BySequence-Label"]]]], 
                   StandardForm]] :> (MUnit`Palette`Private`$barDisplayType$$ = 
                 "InSequence")}, Method -> "Queued", Appearance -> None, 
               ContentPadding -> False]}, {
              PaneSelectorBox[{True -> TagBox[
                  GridBox[{{
                    ButtonBox[
                    TagBox[
                    TooltipBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "PreviousFailure"]], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "PreviousFailure-Tooltip"]], TooltipDelay -> 
                    0.35], Annotation[#, 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "PreviousFailure-Tooltip"]]], 
                    "Tooltip"]& ], ButtonFunction :> 
                    Block[{$ContextPath}, Needs["MUnit`"]; 
                    MUnit`findFailedTest[
                    ButtonNotebook[], "Previous"]], Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"], 
                    ImageSize -> {Automatic, 28}, 
                    FrameMargins -> {{7, 7}, {0, 0}}, Enabled -> 
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    FrontEnd`ButtonNotebook[], {
                    TaggingRules, "$someTestsFailed"}, False], True], Method -> 
                    "Queued", Evaluator -> Automatic], 
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "Failure-Label"]], ButtonFunction :> {}, 
                    Evaluator -> None, ImageSize -> {Automatic, 28}, Enabled -> 
                    False, Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "DefaultButtonAppearance"], 
                    FrameMargins -> {{7, 7}, {0, 0}}, Method -> "Preemptive"], 
                    ButtonBox[
                    TagBox[
                    TooltipBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "NextFailure"]], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "NextFailure-Tooltip"]], TooltipDelay -> 
                    0.35], Annotation[#, 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "NextFailure-Tooltip"]]], "Tooltip"]& ], 
                    ButtonFunction :> 
                    Block[{$ContextPath}, Needs["MUnit`"]; 
                    MUnit`findFailedTest[
                    ButtonNotebook[], "Next"]], Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"], 
                    ImageSize -> {Automatic, 28}, 
                    FrameMargins -> {{7, 7}, {0, 0}}, Enabled -> 
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    FrontEnd`ButtonNotebook[], {
                    TaggingRules, "$someTestsFailed"}, False], True], Method -> 
                    "Queued", Evaluator -> Automatic]}}, AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "ColumnsIndexed" -> {1 -> 0, 2 -> -0.1, 3 -> -0.1}, 
                    "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    "DialogStyle", Bold, FontColor -> 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]}], "Grid"], False -> TagBox[
                  GridBox[{{
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "PreviousFailureDeactivated"]], 
                    ButtonFunction :> {}, Evaluator -> None, Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"], 
                    ImageSize -> {Automatic, 28}, 
                    FrameMargins -> {{7, 7}, {0, 0}}, Enabled -> 
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    FrontEnd`ButtonNotebook[], {
                    TaggingRules, "$someTestsFailed"}, False], True], Method -> 
                    "Preemptive"], 
                    ButtonBox[
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "Failure-Label"]], 
                    GrayLevel[0.7], StripOnInput -> False], 
                    ButtonFunction :> {}, Evaluator -> None, 
                    ImageSize -> {Automatic, 28}, Enabled -> False, 
                    Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "DefaultButtonAppearance"], 
                    FrameMargins -> {{7, 7}, {0, 0}}, Method -> "Preemptive"], 
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "NextFailureDeactivated"]], 
                    ButtonFunction :> {}, Evaluator -> None, Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"], 
                    ImageSize -> {Automatic, 28}, 
                    FrameMargins -> {{7, 7}, {0, 0}}, Enabled -> 
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    FrontEnd`ButtonNotebook[], {
                    TaggingRules, "$someTestsFailed"}, False], True], Method -> 
                    "Preemptive"]}}, AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "ColumnsIndexed" -> {1 -> 0, 2 -> -0.1, 3 -> -0.1}, 
                    "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    "DialogStyle", Bold, FontColor -> 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]}], "Grid"]}, 
               FrontEnd`CurrentValue[
                FrontEnd`ButtonNotebook[], {TaggingRules, "$someTestsFailed"},
                 False], ImageSize -> All], "\"\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {Right, Left}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 0.5}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], 
          Initialization :> (MUnit`Palette`Private`resultColorBar$$[
             Pattern[MUnit`Palette`Private`cellids1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`successPositions1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`errorPositions1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`failurePositions1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`messagePositions1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`barlength1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`barheight1$, 
              Blank[]]] := 
           Module[{MUnit`Palette`Private`successPositions2$ = Map[{#, 
                 Extract[MUnit`Palette`Private`cellids1$, {#}]}& , 
                MUnit`Palette`Private`successPositions1$], 
              MUnit`Palette`Private`errorPositions2$ = Map[{#, 
                 Extract[MUnit`Palette`Private`cellids1$, {#}]}& , 
                MUnit`Palette`Private`errorPositions1$], 
              MUnit`Palette`Private`failurePositions2$ = Map[{#, 
                 Extract[MUnit`Palette`Private`cellids1$, {#}]}& , 
                MUnit`Palette`Private`failurePositions1$], 
              MUnit`Palette`Private`messagePositions2$ = Map[{#, 
                 Extract[MUnit`Palette`Private`cellids1$, {#}]}& , 
                MUnit`Palette`Private`messagePositions1$], 
              MUnit`Palette`Private`sp$, MUnit`Palette`Private`testnumber$, 
              MUnit`Palette`Private`buttonlength$}, 
             MUnit`Palette`Private`sp$ = Cases[
                ReplaceAll[
                 (If[MUnit`Palette`Private`$barDisplayType$$ === "ByStatus", 
                  SplitBy[#, Last], 
                  SplitBy[
                   SortBy[#, Part[#, 1, 1]& ], Last]]& )[
                  Join[
                   Map[{#, "s"}& , MUnit`Palette`Private`successPositions2$], 
                   
                   Map[{#, "e"}& , MUnit`Palette`Private`errorPositions2$], 
                   Map[{#, "f"}& , MUnit`Palette`Private`failurePositions2$], 
                   
                   
                   Map[{#, "m"}& , 
                    MUnit`Palette`Private`messagePositions2$]]], {{
                    Pattern[MUnit`Palette`Private`a, 
                    Blank[]], 
                    Pattern[MUnit`Palette`Private`n, 
                    Blank[]]}, 
                   Pattern[MUnit`Palette`Private`s, 
                    Blank[String]]} :> {{
                   MUnit`Palette`Private`a, MUnit`Palette`Private`s}, 
                   MUnit`Palette`Private`n}], {{
                  Blank[], 
                  Blank[String]}, 
                 Blank[]}, {1, Infinity}]; 
             MUnit`Palette`Private`testnumber$ = 
              Length[MUnit`Palette`Private`successPositions1$] + 
               Length[MUnit`Palette`Private`errorPositions1$] + 
               Length[MUnit`Palette`Private`failurePositions1$] + 
               Length[MUnit`Palette`Private`messagePositions1$]; 
             If[MUnit`Palette`Private`testnumber$ > 0, 
               MUnit`Palette`Private`buttonlength$ = 
               MUnit`Palette`Private`barlength1$/N[
                MUnit`Palette`Private`testnumber$]]; 
             If[MUnit`Palette`Private`testnumber$ > 50, 
               Graphics[
                Raster[{
                  ReplaceAll[MUnit`Palette`Private`sp$, {{
                    Pattern[MUnit`Palette`Private`n, 
                    Blank[]], 
                    Pattern[MUnit`Palette`Private`a, 
                    Blank[String]]}, 
                    Pattern[MUnit`Palette`Private`b, 
                    Blank[]]} :> 
                   Switch[MUnit`Palette`Private`a, "s", {0.380392, 0.603922, 
                    0.384314}, "e", {0.945, 0.81, 0.314}, "m", {0.921569, 
                    0.678431, 0.337255}, "f", {0.74902, 0.403922, 0.4}]]}, {{
                  0, 0}, {
                  MUnit`Palette`Private`barlength1$ + 50, 
                   MUnit`Palette`Private`barheight1$}}], 
                ImageSize -> {
                 MUnit`Palette`Private`barlength1$ + 50, 
                  MUnit`Palette`Private`barheight1$}, 
                PlotRange -> {{0, MUnit`Palette`Private`barlength1$ + 50}, {
                  0, MUnit`Palette`Private`barheight1$}}], 
               Grid[
                If[MUnit`Palette`Private`testnumber$ === 0, {{}}, {
                  Riffle[
                   ReplaceAll[MUnit`Palette`Private`sp$, {{
                    Pattern[MUnit`Palette`Private`n$, 
                    Blank[]], 
                    Pattern[MUnit`Palette`Private`a$, 
                    Blank[String]]}, 
                    Pattern[MUnit`Palette`Private`b$, 
                    Blank[]]} :> Button[
                    Tooltip[
                    Graphics[{
                    Switch[MUnit`Palette`Private`a$, "s", 
                    RGBColor[0., 0.6, 0.], "e", 
                    RGBColor[0.945, 0.81, 0.314], "m", 
                    RGBColor[0.921569, 0.678431, 0.337255], "f", 
                    RGBColor[0.7, 0., 0]], 
                    
                    Rectangle[{0, 0}, {
                    MUnit`Palette`Private`buttonlength$, 
                    MUnit`Palette`Private`barheight1$}]}, ImagePadding -> 0, 
                    PlotRangePadding -> 0, 
                    ImageSize -> {
                    MUnit`Palette`Private`buttonlength$, 
                    MUnit`Palette`Private`barheight1$}], "Test " <> 
                    ToString[MUnit`Palette`Private`n$], TooltipDelay -> 0.35],
                     NotebookFind[
                    ButtonNotebook[], MUnit`Palette`Private`b$, All, CellID]; 
                    SelectionMove[
                    ButtonNotebook[], All, CellGroup], Appearance -> None, 
                    Method -> "Queued"]], 
                   Graphics[{White, 
                    
                    Rectangle[{0, 0}, {
                    1, MUnit`Palette`Private`barheight1$}]}, ImagePadding -> 
                    0, PlotRangePadding -> 0, 
                    ImageSize -> {1, MUnit`Palette`Private`barheight1$}]]}], 
                Alignment -> {Automatic, Center}, Spacings -> {0, 0}]]]), 
          DynamicModuleValues :> {}]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Right}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     FrameMargins -> {{26, 12}, {Automatic, Automatic}}, ImageSize -> Full, 
     BaseStyle -> {Background -> RGBColor[0.827, 0.827, 0.827]}]], Background -> 
   RGBColor[0.827, 0.827, 0.827], "DockedCell", CellTags -> 
   "MUnitResultsCell"]},
TaggingRules-><|"$testsRun" -> True, "$someTestsFailed" -> False|>,
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (February 4, 2022)",
StyleDefinitions->FrontEnd`FileName[{"MUnit"}, "MUnit.nb", CharacterEncoding -> 
  "UTF-8"],
ExpressionUUID->"3dff1ae9-e69f-4720-8f4a-d7128cdbdc33"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[586, 21, 367, 6, 37, "Input",ExpressionUUID->"a88f2dd6-fc57-4f9f-8a61-f233bd07a9f4",
 CellID->1938547394],
Cell[956, 29, 463, 9, 37, "Input",ExpressionUUID->"a94a2733-c1d2-4aa9-b1ef-a462dd930ae7",
 CellID->317559527],
Cell[1422, 40, 509, 11, 90, "Input",ExpressionUUID->"abafd09e-30e8-4b39-8a28-1d05fcbff785",
 CellID->2093888465],
Cell[CellGroupData[{
Cell[1956, 55, 193, 2, 84, "Section",ExpressionUUID->"8b30adfc-1b34-4f30-ab03-3dbdbf9fff13",
 CellID->2033851281],
Cell[2152, 59, 8056, 239, 544, "Input",ExpressionUUID->"60f6e5ae-7b28-45b8-bfd6-32c949bea28c",
 CellID->311979473]
}, Closed]],
Cell[CellGroupData[{
Cell[10245, 303, 245, 3, 65, "Section",ExpressionUUID->"8ccc180a-b9d0-4504-b409-f22ef5fa0060",
 CellID->144454801],
Cell[10493, 308, 176, 2, 67, "Subsection",ExpressionUUID->"be6561a6-dcb0-4529-b32c-ebe7ea203d48",
 CellID->1174557057],
Cell[CellGroupData[{
Cell[10694, 314, 239, 3, 46, "Subsection",ExpressionUUID->"16c3ae28-008d-4e57-b865-5ca90144b403",
 CellID->32024742],
Cell[CellGroupData[{
Cell[10958, 321, 4719, 120, 330, "VerificationTest",ExpressionUUID->"996f4dab-cea4-4e73-9d97-4c3a39841ccc",
 CellID->470629542],
Cell[15680, 443, 536, 8, 51, "ExpectedOutput",ExpressionUUID->"512585b2-8ad4-4b0e-b1bb-01dfd1235dff",
 CellID->688440493],
Cell[16219, 453, 173, 2, 51, "TestOptions",ExpressionUUID->"1d678b12-84cd-4c5a-a49d-524ffe927dbf",
 CellID->333963903],
Cell[16395, 457, 10357, 242, 33, "TestSuccess",ExpressionUUID->"c6296b9c-ef23-4f5b-9132-62e2207ce634",
 CellID->348422811],
Cell[26755, 701, 9020, 222, 48, "BottomCell",ExpressionUUID->"ded866d0-4639-4c5f-bafb-b7154695f363",
 CellID->1901762755]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35824, 929, 241, 3, 67, "Subsection",ExpressionUUID->"e7c2be78-e0a1-4719-9743-6474f8b87ea5",
 CellID->2089301699],
Cell[CellGroupData[{
Cell[36090, 936, 6424, 171, 460, "VerificationTest",ExpressionUUID->"daa7d3e9-6e15-4140-8505-b71ccf84194b",
 CellID->1388542996],
Cell[42517, 1109, 536, 8, 51, "ExpectedOutput",ExpressionUUID->"ad7b7010-8103-4890-81b4-1d05d738899d",
 CellID->537341823],
Cell[43056, 1119, 173, 2, 51, "TestOptions",ExpressionUUID->"cd44a9a6-ee5f-41ba-bc29-a41c9de362f1",
 CellID->935283526],
Cell[43232, 1123, 10359, 242, 33, "TestSuccess",ExpressionUUID->"3be0db14-884b-4018-9d29-0f67fb531388",
 CellID->494541942],
Cell[53594, 1367, 9020, 222, 48, "BottomCell",ExpressionUUID->"c0835b3c-16e6-4bee-a5a2-426bb2eb0477",
 CellID->1004705304]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62663, 1595, 294, 4, 67, "Subsection",ExpressionUUID->"99330426-354c-46fc-93fc-f9902c83b95b",
 CellID->365425999],
Cell[CellGroupData[{
Cell[62982, 1603, 6335, 167, 460, "VerificationTest",ExpressionUUID->"f80707f1-b09e-4b10-914e-05bfb137d298",
 CellID->2059018420],
Cell[69320, 1772, 537, 8, 51, "ExpectedOutput",ExpressionUUID->"a788c3ec-2a32-4d40-afa4-d353b1f61097",
 CellID->1371097182],
Cell[69860, 1782, 174, 2, 51, "TestOptions",ExpressionUUID->"2fe666b3-72ad-437c-877a-ce423db59253",
 CellID->1530805564],
Cell[70037, 1786, 10359, 242, 33, "TestSuccess",ExpressionUUID->"84dc6ab6-a2a8-4916-b3e7-095956bbca72",
 CellID->934882551],
Cell[80399, 2030, 9020, 222, 48, "BottomCell",ExpressionUUID->"a62ce1dc-d68f-4a09-a81a-df1db07ad464",
 CellID->1580673205]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[89468, 2258, 186, 2, 67, "Subsection",ExpressionUUID->"012c4335-d177-4aa3-aa35-285cd3dc6a03",
 CellID->1801190718],
Cell[89657, 2262, 193, 3, 37, "Input",ExpressionUUID->"39e0b3c6-5a84-45ca-9a80-cb0ae06e2938",
 CellID->2021415107],
Cell[CellGroupData[{
Cell[89875, 2269, 3631, 106, 347, "VerificationTest",ExpressionUUID->"3fd85bb7-8c74-40ea-a22e-e808ea93e7f8",
 CellID->1262417770],
Cell[93509, 2377, 218, 4, 51, "ExpectedOutput",ExpressionUUID->"e2a2000a-7331-4bbd-902f-f91de8955c33",
 CellID->317028030],
Cell[93730, 2383, 10359, 242, 33, "TestSuccess",ExpressionUUID->"47d0acca-3733-4999-836c-3f503d74afde",
 CellID->749645323],
Cell[104092, 2627, 9017, 222, 48, "BottomCell",ExpressionUUID->"8b80be24-abdd-412e-9e64-2d9c2d393d73",
 CellID->2386712]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113158, 2855, 241, 3, 67, "Subsection",ExpressionUUID->"59b6523a-99aa-4518-8ef0-ad76b8bb0fd1",
 CellID->1853988836],
Cell[CellGroupData[{
Cell[113424, 2862, 6597, 170, 477, "VerificationTest",ExpressionUUID->"2bf6e623-c0c4-477f-9280-61ed4f6034e1",
 CellID->2648682],
Cell[120024, 3034, 537, 8, 51, "ExpectedOutput",ExpressionUUID->"f53dfb01-e62d-456c-972b-fb34e8243c26",
 CellID->1566725434],
Cell[120564, 3044, 174, 2, 51, "TestOptions",ExpressionUUID->"145b5106-85b4-40e9-82a5-099a1eb6563d",
 CellID->1657373371],
Cell[120741, 3048, 10361, 242, 33, "TestSuccess",ExpressionUUID->"b7df4cec-5f01-4fc7-98e5-5871c43f7b23",
 CellID->622226412],
Cell[131105, 3292, 9020, 222, 48, "BottomCell",ExpressionUUID->"e92cc8e9-9482-45e5-89bc-22eae0a441de",
 CellID->1661429241]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[140174, 3520, 339, 4, 67, "Subsection",ExpressionUUID->"6b572597-caa7-4798-aef5-adac3014e131",
 CellID->1816730269],
Cell[CellGroupData[{
Cell[140538, 3528, 6227, 162, 477, "VerificationTest",ExpressionUUID->"ef681750-8db6-4630-acd6-53c112a0ea2f",
 CellID->1904177214],
Cell[146768, 3692, 537, 8, 51, "ExpectedOutput",ExpressionUUID->"8ead642d-501a-4e90-8368-e7645d799f3f",
 CellID->1705128104],
Cell[147308, 3702, 174, 2, 51, "TestOptions",ExpressionUUID->"05b0d954-2bc4-44a0-bac3-e6e90a2ee590",
 CellID->2066258360],
Cell[147485, 3706, 10360, 242, 33, "TestSuccess",ExpressionUUID->"e2ea3c18-3c8d-43ad-968a-5d603fe16c27",
 CellID->2040226521],
Cell[157848, 3950, 9020, 222, 48, "BottomCell",ExpressionUUID->"688f93db-acf7-442d-a667-517e74f142b0",
 CellID->1215746798]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[166929, 4179, 205, 3, 65, "Section",ExpressionUUID->"e40e66bf-cd59-4519-bd48-0c72765bf075",
 CellID->1894512895],
Cell[167137, 4184, 707, 16, 303, "Text",ExpressionUUID->"5cb48a1b-1dfc-4dfd-98d0-554468144e05",
 CellID->242556382],
Cell[167847, 4202, 386, 5, 37, "Input",ExpressionUUID->"9161983a-3e3b-44b5-81a5-777bcc3bd9be",
 CellID->970687297],
Cell[CellGroupData[{
Cell[168258, 4211, 179, 2, 56, "Subsubsection",ExpressionUUID->"043d22c4-18ef-492e-a293-3bc60ebd983e",
 CellID->800164714],
Cell[CellGroupData[{
Cell[168462, 4217, 4160, 116, 408, "VerificationTest",ExpressionUUID->"1fdff36a-0e65-4a08-9055-83af1b6baaf7",
 CellID->1128812697],
Cell[172625, 4335, 245, 4, 51, "ExpectedOutput",ExpressionUUID->"836ec355-5cf4-4054-a785-89c0adba1615",
 CellID->1084460881],
Cell[172873, 4341, 10354, 242, 33, "TestSuccess",ExpressionUUID->"37b50920-049f-4b4a-bdbc-fbdbe79bdc9f",
 CellID->22269357],
Cell[183230, 4585, 9019, 222, 48, "BottomCell",ExpressionUUID->"e15e665e-64a9-428d-b5e1-c118e464489b",
 CellID->618928521]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192298, 4813, 227, 3, 56, "Subsubsection",ExpressionUUID->"e0c05458-5181-4e36-b29c-03ae5d1f55d1",
 CellID->866413251],
Cell[CellGroupData[{
Cell[192550, 4820, 4159, 116, 408, "VerificationTest",ExpressionUUID->"d18b7f57-6c0e-4dca-9c33-a543e80b7760",
 CellID->501336233],
Cell[196712, 4938, 245, 4, 51, "ExpectedOutput",ExpressionUUID->"4e675f5b-b890-4323-a82c-2fc1c177056a",
 CellID->1379720850],
Cell[196960, 4944, 10360, 242, 33, "TestSuccess",ExpressionUUID->"b8564b7c-277c-4f60-a0f7-795245b31a36",
 CellID->1129362485],
Cell[207323, 5188, 9020, 222, 48, "BottomCell",ExpressionUUID->"e5dc54d6-1a92-47d4-b373-a947a35227df",
 CellID->1734813209]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[216392, 5416, 177, 2, 56, "Subsubsection",ExpressionUUID->"77b92942-1d0b-4dee-ba10-1b13b304003c",
 CellID->1501199301],
Cell[CellGroupData[{
Cell[216594, 5422, 6609, 191, 616, "VerificationTest",ExpressionUUID->"764d16a4-277c-40f7-b1ba-c00362c0e798",
 CellID->2098091176],
Cell[223206, 5615, 244, 4, 51, "ExpectedOutput",ExpressionUUID->"c02834fd-7c44-4f21-a26a-55095facedfe",
 CellID->936911292],
Cell[223453, 5621, 10360, 242, 33, "TestSuccess",ExpressionUUID->"e1d28a21-1c39-41f1-9a17-872e61195d80",
 CellID->1577637086],
Cell[233816, 5865, 9019, 222, 48, "BottomCell",ExpressionUUID->"aa639916-eec3-4356-a6a5-330475887eb6",
 CellID->365914893]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[242896, 6094, 179, 2, 65, "Section",ExpressionUUID->"fa33509c-856b-44f3-b0dd-bd9b7101531c",
 CellID->282811579],
Cell[CellGroupData[{
Cell[243100, 6100, 9493, 266, 495, "Input",ExpressionUUID->"90ff0fe7-9471-45ec-bb14-73e345ea140f",
 CellID->1131360723],
Cell[252596, 6368, 626, 12, 42, "Output",ExpressionUUID->"8092d156-22b3-4819-8346-59edf46a5745",
 CellID->1334072909],
Cell[253225, 6382, 214920, 3602, 302, "Output",ExpressionUUID->"cb79905b-76ae-4d75-b7e9-59fc87ce7c85",
 CellID->2034106883]
}, Open  ]]
}, Closed]]
}
]
*)

